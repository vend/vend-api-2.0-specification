{
  "x-stoplight": {
    "docs": {
      "showModels": false

      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "Vend Developer Relations Team",
      "url": "https://developers.vendhq.com",
      "email": "api@vendhq.com"
    },
    "termsOfService": "https://www.vendhq.com/terms"
  },
  "tags": [
    {
      "name": "Brands",
      "description": "Brand operations."
    },
    {
      "name": "Consignments",
      "description": "Stock control operations."
    },
    {
      "name": "Customers",
      "description": "Customer operations."
    },
    {
      "name": "Search",
      "description": "Search related operations"
    },
    {
      "name": "Channel request log",
      "description": "A log of requests and responses between Vend and an integration channel."
    }
  ],
  "host": "{domain_prefix}.vendhq.com",
  "basePath": "/api/2.0",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "x-explorer-enabled": false,
  "paths": {
    "/brands": {
      "get": {
        "description": "Returns a paginated list of brands.",
        "summary": "List brands",
        "tags": [
          "Brands"
        ],
        "operationId": "ListBrands",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BrandCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "0adaafb3-6583-11e5-fb60-d5b67a17df2f",
                    "name": "Peak Performance",
                    "deleted_at": null,
                    "version": 882391722
                  },
                  {
                    "id": "0adaafb3-6583-11e5-fb60-ebae84675ae4",
                    "name": "Sennheiser",
                    "deleted_at": null,
                    "version": 1013841198
                  },
                  {
                    "id": "b1e2624f-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "Generic Brand",
                    "deleted_at": null,
                    "version": 2364279587
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/brands/{brand_id}": {
      "get": {
        "description": "Returns a single brand with a requested ID",
        "summary": "Get a single brand",
        "tags": [
          "Brands"
        ],
        "operationId": "GetBrandByID",
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Valid brand ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BrandResponse"
            },
            "examples": {
              "new": {
                "data": {
                  "id": "0adaafb3-6583-11e5-fb60-d5b67a17df2f",
                  "name": "Peak Performance",
                  "deleted_at": null,
                  "version": 882391722
                }
              }
            }
          }
        }
      }
    },
    "/consignments": {
      "get": {
        "description": "Returns a paginated list of consignments.",
        "summary": "List consignments",
        "tags": [
          "Consignments"
        ],
        "operationId": "ListConsignments",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "in": "query",
            "name": "outlet_id",
            "type": "string",
            "format": "UUID",
            "description": "The ID of the outlet which the consignment is targeted at."
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "enum": [
              "SUPPLIER",
              "OUTLET",
              "STOCKTAKE"
            ],
            "description": "The type of consignments to be returned."
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "enum": [
              "RECEIVED",
              "CANCELLED",
              "OPEN",
              "STOCKTAKE",
              "SENT",
              "STOCKTAKE_COMPLETE",
              "STOCKTAKE_IN_PROGRESS",
              "STOCKTAKE_SCHEDULED",
              "STOCKTAKE_IN_PROGRESS_PROCESSED"
            ],
            "description": "The status of consignments to be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsignmentCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "7dbe52cd-0ae4-11e4-a0f5-b8ca3a64f8f4",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "Order - Mon 14 Jul 2014",
                    "due_at": null,
                    "type": "SUPPLIER",
                    "status": "RECEIVED",
                    "supplier_id": null,
                    "source_outlet_id": null,
                    "consignment_date": "2014-07-13T23:22:00+00:00",
                    "received_at": "2015-07-30T02:59:51+00:00",
                    "show_inactive": true,
                    "supplier_invoice": "",
                    "reference": null,
                    "total_count_gain": null,
                    "total_cost_gain": null,
                    "total_count_loss": null,
                    "total_cost_loss": null,
                    "created_at": "2014-07-13T23:22:00+00:00",
                    "updated_at": "2015-07-30T02:59:51+00:00",
                    "deleted_at": null,
                    "version": 827406,
                    "filters": []
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-2812b9e74b37",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "Stocktake 1",
                    "due_at": null,
                    "type": "STOCKTAKE",
                    "status": "STOCKTAKE_COMPLETE",
                    "supplier_id": null,
                    "source_outlet_id": null,
                    "consignment_date": "2014-08-20T02:36:02+00:00",
                    "received_at": "2014-08-20T02:37:32+00:00",
                    "show_inactive": true,
                    "supplier_invoice": "",
                    "reference": null,
                    "total_count_gain": null,
                    "total_cost_gain": null,
                    "total_count_loss": null,
                    "total_cost_loss": null,
                    "created_at": "2014-08-20T02:36:02+00:00",
                    "updated_at": "2014-08-20T02:37:32+00:00",
                    "deleted_at": null,
                    "version": 1228871,
                    "filters": []
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-281711e05741",
                    "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "name": "Stock Transfer",
                    "due_at": "2014-08-21T00:00:00+00:00",
                    "type": "OUTLET",
                    "status": "RECEIVED",
                    "supplier_id": null,
                    "source_outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "consignment_date": "2014-08-20T03:07:07+00:00",
                    "received_at": "2014-08-20T03:08:49+00:00",
                    "show_inactive": true,
                    "supplier_invoice": "",
                    "reference": null,
                    "total_count_gain": null,
                    "total_cost_gain": null,
                    "total_count_loss": null,
                    "total_cost_loss": null,
                    "created_at": "2014-08-20T03:07:07+00:00",
                    "updated_at": "2014-08-20T03:08:49+00:00",
                    "deleted_at": null,
                    "version": 1228872,
                    "filters": []
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new consignment of type `STOCKTAKE`. Currently, this endpoint only supports creation of inventory counts (stock takes).",
        "summary": "Create an inventory count",
        "tags": [
          "Consignments"
        ],
        "operationId": "CreateInventoryCount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCount"
            },
            "x-examples": {
              "application/json": {
                "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                "name": "API Inventory Count",
                "type": "STOCKTAKE",
                "status": "STOCKTAKE_SCHEDULED"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsignmentResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "0af7b240-ab83-11e7-eddc-402337165363",
                  "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                  "name": "API Invenotry Count",
                  "due_at": null,
                  "type": "STOCKTAKE",
                  "status": "STOCKTAKE_SCHEDULED",
                  "supplier_id": null,
                  "source_outlet_id": null,
                  "consignment_date": "2017-05-24T01:49:25+00:00",
                  "received_at": null,
                  "show_inactive": true,
                  "supplier_invoice": null,
                  "reference": null,
                  "total_count_gain": null,
                  "total_cost_gain": null,
                  "total_count_loss": null,
                  "total_cost_loss": null,
                  "created_at": "2017-05-24T01:49:25+00:00",
                  "updated_at": "2017-05-24T01:49:25+00:00",
                  "deleted_at": null,
                  "version": 3505324485,
                  "filters": []
                }
              }
            }
          }
        }
      }
    },
    "/channel_requests": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RequestCollectionResponse"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "1073019276397793280",
                    "grouping_id": "job-5aa0bfd3f948109e314610883da6a6edf4c826db-1544662705",
                    "request_method": "POST",
                    "status_code": 200,
                    "url": "https://woocommerce-domain.com/wp-json/wc/v2/products/batch",
                    "request": "POST /wp-json/wc/v2/products/batch HTTP/1.1\r\nHost: woocommerce-domain.com\r\nUser-Agent: vend/integrations/268506b80c1d/go1.11\r\nContent-Length: 229\r\nAuthorization: [REDACTED]\r\nContent-Type: application/json\r\nAccept-Encoding: gzip\r\n\r\n{\"update\":[{\"id\":8,\"permalink\":\"\",\"date_created\":\"\",\"date_created_gmt\":\"0001-01-01T00:00:00\",\"date_modified\":\"\",\"date_modified_gmt\":\"0001-01-01T00:00:00\",\"price\":\"0\",\"stock_quantity\":\"0\",\"shipping_class_id\":0,\"variations\":null}]}",
                    "response": "HTTP/2.0 200 OK\r\nContent-Length: 2137\r\nAccess-Control-Allow-Headers: Authorization, Content-Type\r\nAccess-Control-Expose-Headers: X-WP-Total, X-WP-TotalPages\r\nAllow: POST, PUT, PATCH\r\nCache-Control: no-cache, must-revalidate, max-age=0\r\nContent-Type: application/json; charset=UTF-8\r\nDate: Thu, 13 Dec 2018 00:58:25 GMT\r\nExpires: Wed, 11 Jan 1984 05:00:00 GMT\r\nLink: <https://woocommerce-domain.com/wp-json/>; rel=\"https://api.w.org/\"\r\nServer: nginx/1.14.1\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Powered-By: PHP/7.2.12\r\nX-Robots-Tag: noindex\r\n\r\n{\"update\":[{\"id\":8,\"name\":\"Simple + All 2\",\"slug\":\"simple1\",\"permalink\":\"https:\\/\\/woocommerce-domain.com\\/product\\/simple1\\/\",\"date_created\":\"2018-12-12T23:39:14\",\"date_created_gmt\":\"2018-12-12T23:39:14\",\"date_modified\":\"2018-12-13T00:58:25\",\"date_modified_gmt\":\"2018-12-13T00:58:25\",\"type\":\"simple\",\"status\":\"publish\",\"featured\":false,\"catalog_visibility\":\"visible\",\"description\":\"Simple product\",\"short_description\":\"\",\"sku\":\"1000001\",\"price\":\"40\",\"regular_price\":\"40\",\"sale_price\":\"\",\"date_on_sale_from\":null,\"date_on_sale_from_gmt\":null,\"date_on_sale_to\":null,\"date_on_sale_to_gmt\":null,\"price_html\":\"<span class=\\\"woocommerce-Price-amount amount\\\"><span class=\\\"woocommerce-Price-currencySymbol\\\">&#36;<\\/span>40.00<\\/span>\",\"on_sale\":false,\"purchasable\":true,\"total_sales\":0,\"virtual\":false,\"downloadable\":false,\"downloads\":[],\"download_limit\":-1,\"download_expiry\":-1,\"external_url\":\"\",\"button_text\":\"\",\"tax_status\":\"taxable\",\"tax_class\":\"\",\"manage_stock\":true,\"stock_quantity\":0,\"in_stock\":false,\"backorders\":\"no\",\"backorders_allowed\":false,\"backordered\":false,\"sold_individually\":false,\"weight\":\"\",\"dimensions\":{\"length\":\"\",\"width\":\"\",\"height\":\"\"},\"shipping_required\":true,\"shipping_taxable\":true,\"shipping_class\":\"\",\"shipping_class_id\":0,\"reviews_allowed\":true,\"average_rating\":\"0\",\"rating_count\":0,\"related_ids\":[],\"upsell_ids\":[],\"cross_sell_ids\":[],\"parent_id\":0,\"purchase_note\":\"\",\"categories\":[{\"id\":16,\"name\":\"Type 1\",\"slug\":\"type-1\"}],\"tags\":[{\"id\":17,\"name\":\"Tag2\",\"slug\":\"tag2\"}],\"images\":[{\"id\":0,\"date_created\":\"2018-12-13T00:58:25\",\"date_created_gmt\":\"2018-12-13T00:58:25\",\"date_modified\":\"2018-12-13T00:58:25\",\"date_modified_gmt\":\"2018-12-13T00:58:25\",\"src\":\"https:\\/\\/woocommerce-domain.com\\/wp-content\\/plugins\\/woocommerce\\/assets\\/images\\/placeholder.png\",\"name\":\"Placeholder\",\"alt\":\"Placeholder\",\"position\":0}],\"attributes\":[],\"default_attributes\":[],\"variations\":[],\"grouped_products\":[],\"menu_order\":0,\"meta_data\":[],\"_links\":{\"self\":[{\"href\":\"https:\\/\\/woocommerce-domain.com\\/wp-json\\/wc\\/v2\\/products\\/8\"}],\"collection\":[{\"href\":\"https:\\/\\/woocommerce-domain.com\\/wp-json\\/wc\\/v2\\/products\"}]}}]}",
                    "error": null,
                    "occurred_at": "2018-12-13T00:58:25.919065Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "List request records",
        "description": "Returns a list of request log records.",
        "operationId": "listRequests",
        "tags": [
          "Channel request log"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status_code",
            "type": "string",
            "description": "Limit the requests to 1 or more status codes."
          },
          {
            "in": "query",
            "name": "request_method",
            "type": "string",
            "description": "Limit the requests to 1 or more request methods."
          },
          {
            "in": "query",
            "name": "occurred_before",
            "type": "string",
            "format": "date-time",
            "description": "Limit requests to before this RFC3339 date."
          },
          {
            "in": "query",
            "name": "occurred_after",
            "type": "string",
            "format": "date-time",
            "description": "Limit requests to after this RFC3339 date."
          },
          {
            "in": "query",
            "name": "status_code_before",
            "type": "string",
            "description": "Limit requests to those with status codes less than this value."
          },
          {
            "in": "query",
            "name": "status_code_after",
            "type": "string",
            "description": "Limit requests to those with status codes greater than this value."
          },
          {
            "in": "query",
            "name": "channel_id",
            "type": "string",
            "description": "If provided, request logs will be limited to the supplied channel id. If no id is provided, only requests logged with no channel id will be returned. Requests with no channel id indicate requests made during the setup process."
          }
        ]
      }
    },
    "/channel_requests/{request_log_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RequestSingleResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "1073019276397793280",
                  "grouping_id": "job-5aa0bfd3f948109e314610883da6a6edf4c826db-1544662705",
                  "request_method": "POST",
                  "status_code": 200,
                  "url": "https://woocommerce-domain.com/wp-json/wc/v2/products/batch",
                  "request": "POST /wp-json/wc/v2/products/batch HTTP/1.1\r\nHost: woocommerce-domain.com\r\nUser-Agent: vend/integrations/268506b80c1d/go1.11\r\nContent-Length: 229\r\nAuthorization: [REDACTED]\r\nContent-Type: application/json\r\nAccept-Encoding: gzip\r\n\r\n{\"update\":[{\"id\":8,\"permalink\":\"\",\"date_created\":\"\",\"date_created_gmt\":\"0001-01-01T00:00:00\",\"date_modified\":\"\",\"date_modified_gmt\":\"0001-01-01T00:00:00\",\"price\":\"0\",\"stock_quantity\":\"0\",\"shipping_class_id\":0,\"variations\":null}]}",
                  "response": "HTTP/2.0 200 OK\r\nContent-Length: 2137\r\nAccess-Control-Allow-Headers: Authorization, Content-Type\r\nAccess-Control-Expose-Headers: X-WP-Total, X-WP-TotalPages\r\nAllow: POST, PUT, PATCH\r\nCache-Control: no-cache, must-revalidate, max-age=0\r\nContent-Type: application/json; charset=UTF-8\r\nDate: Thu, 13 Dec 2018 00:58:25 GMT\r\nExpires: Wed, 11 Jan 1984 05:00:00 GMT\r\nLink: <https://woocommerce-domain.com/wp-json/>; rel=\"https://api.w.org/\"\r\nServer: nginx/1.14.1\r\nStrict-Transport-Security: max-age=31536000\r\nX-Content-Type-Options: nosniff\r\nX-Powered-By: PHP/7.2.12\r\nX-Robots-Tag: noindex\r\n\r\n{\"update\":[{\"id\":8,\"name\":\"Simple + All 2\",\"slug\":\"simple1\",\"permalink\":\"https:\\/\\/woocommerce-domain.com\\/product\\/simple1\\/\",\"date_created\":\"2018-12-12T23:39:14\",\"date_created_gmt\":\"2018-12-12T23:39:14\",\"date_modified\":\"2018-12-13T00:58:25\",\"date_modified_gmt\":\"2018-12-13T00:58:25\",\"type\":\"simple\",\"status\":\"publish\",\"featured\":false,\"catalog_visibility\":\"visible\",\"description\":\"Simple product\",\"short_description\":\"\",\"sku\":\"1000001\",\"price\":\"40\",\"regular_price\":\"40\",\"sale_price\":\"\",\"date_on_sale_from\":null,\"date_on_sale_from_gmt\":null,\"date_on_sale_to\":null,\"date_on_sale_to_gmt\":null,\"price_html\":\"<span class=\\\"woocommerce-Price-amount amount\\\"><span class=\\\"woocommerce-Price-currencySymbol\\\">&#36;<\\/span>40.00<\\/span>\",\"on_sale\":false,\"purchasable\":true,\"total_sales\":0,\"virtual\":false,\"downloadable\":false,\"downloads\":[],\"download_limit\":-1,\"download_expiry\":-1,\"external_url\":\"\",\"button_text\":\"\",\"tax_status\":\"taxable\",\"tax_class\":\"\",\"manage_stock\":true,\"stock_quantity\":0,\"in_stock\":false,\"backorders\":\"no\",\"backorders_allowed\":false,\"backordered\":false,\"sold_individually\":false,\"weight\":\"\",\"dimensions\":{\"length\":\"\",\"width\":\"\",\"height\":\"\"},\"shipping_required\":true,\"shipping_taxable\":true,\"shipping_class\":\"\",\"shipping_class_id\":0,\"reviews_allowed\":true,\"average_rating\":\"0\",\"rating_count\":0,\"related_ids\":[],\"upsell_ids\":[],\"cross_sell_ids\":[],\"parent_id\":0,\"purchase_note\":\"\",\"categories\":[{\"id\":16,\"name\":\"Type 1\",\"slug\":\"type-1\"}],\"tags\":[{\"id\":17,\"name\":\"Tag2\",\"slug\":\"tag2\"}],\"images\":[{\"id\":0,\"date_created\":\"2018-12-13T00:58:25\",\"date_created_gmt\":\"2018-12-13T00:58:25\",\"date_modified\":\"2018-12-13T00:58:25\",\"date_modified_gmt\":\"2018-12-13T00:58:25\",\"src\":\"https:\\/\\/woocommerce-domain.com\\/wp-content\\/plugins\\/woocommerce\\/assets\\/images\\/placeholder.png\",\"name\":\"Placeholder\",\"alt\":\"Placeholder\",\"position\":0}],\"attributes\":[],\"default_attributes\":[],\"variations\":[],\"grouped_products\":[],\"menu_order\":0,\"meta_data\":[],\"_links\":{\"self\":[{\"href\":\"https:\\/\\/woocommerce-domain.com\\/wp-json\\/wc\\/v2\\/products\\/8\"}],\"collection\":[{\"href\":\"https:\\/\\/woocommerce-domain.com\\/wp-json\\/wc\\/v2\\/products\"}]}}]}",
                  "error": null,
                  "occurred_at": "2018-12-13T00:58:25.919065Z"
                }
              }
            }
          }
        },
        "summary": "Get a single request log",
        "parameters": [
          {
            "in": "path",
            "name": "request_log_id",
            "type": "string",
            "required": true
          }
        ],
        "description": "Returns a single request log entry with a specific ID.",
        "operationId": "getSingleRequest",
        "tags": [
          "Channel request log"
        ]
      }
    },
    "/channel_requests/{request_log_id}.txt": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "description": "Plain text representation of the request object."
            },
            "examples": {
              "text/plain": "ID                   1074422697280679936\nGroupingID           api-TOx0VMzYJX\nURL                  https://woo-i9n.dev.vendhq.works/wp-json/wc/v2/system_status\nRequestMethod        GET\nRequest              GET /wp-json/wc/v2/system_status HTTP/1.1\n                     Host: woo-i9n.dev.vendhq.works\n                     User-Agent: vend/integrations/8e029c23748a/go1.10\n                     Authorization: [REDACTED]\n                     Content-Type: application/json\n                     Accept-Encoding: gzip\n\n\nStatusCode           401\nResponse             HTTP/2.0 401 Unauthorized\n                     Content-Length: 107\n                     Access-Control-Allow-Headers: Authorization, Content-Type\n                     Access-Control-Expose-Headers: X-WP-Total, X-WP-TotalPages\n                     Content-Type: application/json; charset=UTF-8\n                     Date: Sun, 16 Dec 2018 21:55:07 GMT\n                     Link: <https://woo-i9n.dev.vendhq.works/wp-json/>; rel=\"https://api.w.org/\"\n                     Server: nginx/1.14.0\n                     Strict-Transport-Security: max-age=31536000\n                     X-Content-Type-Options: nosniff\n                     X-Powered-By: PHP/7.2.12\n                     X-Robots-Tag: noindex\n\n                     {\"code\":\"woocommerce_rest_cannot_view\",\"message\":\"Sorry, you cannot list resources.\",\"data\":{\"status\":401}}"
            }
          }
        },
        "summary": "Get a single request log as text",
        "parameters": [
          {
            "in": "path",
            "name": "request_log_id",
            "type": "string",
            "required": true
          }
        ],
        "description": "Returns a text representation of a single request log entry with a specific ID.",
        "operationId": "getSingleRequestText",
        "tags": [
          "Channel request log"
        ],
        "produces": [
          "text/plain"
        ]
      }
    },
    "/channels": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChannelCollectionResponse"
            }
          }
        },
        "summary": "List channel records",
        "operationId": "listChannels",
        "tags": [
          "Channel request log"
        ],
        "description": "Returns a list of configured channels."
      }
    },
    "/consignments/{consignment_id}": {
      "get": {
        "description": "Returns a single consignment with the requested ID.",
        "summary": "Get a single consignment",
        "tags": [
          "Consignments"
        ],
        "operationId": "GetConsignmentByID",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid consignment ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsignmentResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "7dbe52cd-0ae4-11e4-a0f5-b8ca3a64f8f4",
                  "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                  "name": "Order - Mon 14 Jul 2014",
                  "due_at": null,
                  "type": "SUPPLIER",
                  "status": "RECEIVED",
                  "supplier_id": null,
                  "source_outlet_id": null,
                  "consignment_date": "2014-07-13T23:22:00+00:00",
                  "received_at": "2015-07-30T02:59:51+00:00",
                  "show_inactive": true,
                  "supplier_invoice": "",
                  "reference": null,
                  "total_count_gain": null,
                  "total_cost_gain": null,
                  "total_count_loss": null,
                  "total_cost_loss": null,
                  "created_at": "2014-07-13T23:22:00+00:00",
                  "updated_at": "2015-07-30T02:59:51+00:00",
                  "deleted_at": null,
                  "version": 827406,
                  "filters": []
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates the inventory count with requested ID.",
        "summary": "Update an inventory count",
        "tags": [
          "Consignments"
        ],
        "operationId": "UpdateInventoryCountByID",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid consignment ID."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCount"
            },
            "x-examples": {
              "application/json": {
                "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                "name": "API Stock Transfer",
                "due_at": "2014-08-21T00:00:00+00:00",
                "type": "OUTLET",
                "status": "RECEIVED",
                "supplier_id": null,
                "source_outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                "consignment_date": "2014-08-20T03:07:07+00:00",
                "received_at": "2014-08-20T03:08:49+00:00",
                "show_inactive": true,
                "supplier_invoice": "",
                "reference": null,
                "total_count_gain": null,
                "total_cost_gain": null,
                "total_count_loss": null,
                "total_cost_loss": null,
                "created_at": "2014-08-20T03:07:07+00:00",
                "updated_at": "2014-08-20T03:08:49+00:00",
                "deleted_at": null,
                "version": 1228872,
                "filters": []
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsignmentResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-281711e05741",
                  "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                  "name": "Stock Transfer",
                  "due_at": "2014-08-21T00:00:00+00:00",
                  "type": "OUTLET",
                  "status": "RECEIVED",
                  "supplier_id": null,
                  "source_outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                  "consignment_date": "2014-08-20T03:07:07+00:00",
                  "received_at": "2014-08-20T03:08:49+00:00",
                  "show_inactive": true,
                  "supplier_invoice": "",
                  "reference": null,
                  "total_count_gain": null,
                  "total_cost_gain": null,
                  "total_count_loss": null,
                  "total_cost_loss": null,
                  "created_at": "2014-08-20T03:07:07+00:00",
                  "updated_at": "2014-08-20T03:08:49+00:00",
                  "deleted_at": null,
                  "version": 1228872,
                  "filters": []
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the consignment with the given ID.",
        "summary": "Delete a consignment",
        "tags": [
          "Consignments"
        ],
        "operationId": "DeleteConsignmentByID",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/consignments/{consignment_id}/products": {
      "get": {
        "description": "Returns a collection of consignment products associated with the specified consignment.",
        "summary": "List all products for a specific consignment",
        "tags": [
          "Consignments"
        ],
        "operationId": "ListProductsByConsignmentID",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "The ID of the consignment for which products should be listed."
          },
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsignmentProductCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "product_id": "fa16cdf8-063c-11e4-a0f5-b8ca3a64f8f4",
                    "product_sku": null,
                    "count": "10.00000",
                    "received": "10.00000",
                    "cost": "0.00000",
                    "is_included": false,
                    "status": "RECEIVE_SUCCESS",
                    "created_at": "2015-02-23T18:46:12+00:00",
                    "updated_at": "2015-07-30T02:59:51+00:00",
                    "deleted_at": null,
                    "version": 3542970
                  },
                  {
                    "product_id": "fa16cdf8-063c-11e4-a0f5-b8ca3a64f8f4",
                    "product_sku": null,
                    "count": null,
                    "received": "0.00000",
                    "cost": "0.00000",
                    "is_included": false,
                    "status": "RECEIVE_SUCCESS",
                    "created_at": "2015-02-23T18:46:24+00:00",
                    "updated_at": "2015-07-30T02:59:51+00:00",
                    "deleted_at": null,
                    "version": 3542975
                  },
                  {
                    "product_id": "fa16cdf8-063c-11e4-a0f5-b8ca3a64f8f4",
                    "product_sku": null,
                    "count": "10.00000",
                    "received": "0.00000",
                    "cost": "100.00000",
                    "is_included": true,
                    "status": "RECEIVE_SUCCESS",
                    "created_at": "2014-07-13T23:22:59+00:00",
                    "updated_at": "2015-07-30T02:59:51+00:00",
                    "deleted_at": null,
                    "version": 20813790
                  }
                ],
                "version": {
                  "max": 20813790,
                  "min": 3542970
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Increases or decreases the count for a specific product within the inventory count.",
        "summary": "Adjust the inventory item count",
        "tags": [
          "Consignments"
        ],
        "operationId": "AdjustInventoryItemCount",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid consignment ID."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCountItemRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCountItemResponse"
            }
          }
        }
      }
    },
    "/consignments/{consignment_id}/products/{product_id}": {
      "delete": {
        "description": "Removes the count for a specific product from the inventory count.",
        "summary": "Delete an item from an inventory count",
        "tags": [
          "Consignments"
        ],
        "operationId": "DeleteItemFromInventoryCount",
        "parameters": [
          {
            "name": "consignment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Valid consignment (inventory count) ID."
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of a product included in the inventory count"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/customer_groups": {
      "get": {
        "description": "Returns a paginated list of customer groups.",
        "summary": "List customer groups",
        "tags": [
          "Customer Groups"
        ],
        "operationId": "ListCustomerGroups",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerGroupCollection"
            },
            "examples": {
              "new": {
                "data": [
                  {
                    "id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "All Customers",
                    "group_id": "1111111111",
                    "version": 29483,
                    "created_at": "2014-06-09T21:04:49+00:00",
                    "updated_at": "2014-06-09T21:04:49+00:00",
                    "deleted_at": null
                  },
                  {
                    "id": "dc85058a-a683-11e5-e112-46b9bd1f069e",
                    "name": "VIP",
                    "group_id": "VIP-Y968",
                    "version": 157810,
                    "created_at": "2015-08-19T21:32:06+00:00",
                    "updated_at": "2015-08-19T21:32:06+00:00",
                    "deleted_at": null
                  },
                  {
                    "id": "06e35f89-3783-11e6-ec7e-0bf840380a64",
                    "name": "Students",
                    "group_id": "Students-2SFG",
                    "version": 1205737356,
                    "created_at": "2016-04-26T21:45:53+00:00",
                    "updated_at": "2016-04-26T21:45:53+00:00",
                    "deleted_at": null
                  }
                ],
                "version": {
                  "max": 1205737356,
                  "min": 29483
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "description": "Returns a paginated list of customers.",
        "summary": "List customers",
        "tags": [
          "Customers"
        ],
        "operationId": "ListCustomers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/Deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-4f73f02a9d1c",
                    "customer_code": "Tony-N4ZJ",
                    "first_name": "Anthony",
                    "last_name": "Stark",
                    "email": "tony@stark.com",
                    "year_to_date": 0,
                    "balance": -25840.85,
                    "loyalty_balance": 5809.64,
                    "note": "",
                    "gender": "M",
                    "date_of_birth": "1963-03-03",
                    "company_name": "Stark Industries Inc",
                    "do_not_email": false,
                    "phone": "+001 555 12345678",
                    "mobile": "+001 485 23456789",
                    "fax": "+001 555 12345345",
                    "twitter": "@ironman",
                    "website": "http://www.starkinc.com",
                    "physical_suburb": "Suburb",
                    "physical_city": "Los Angeles",
                    "physical_postcode": "23422",
                    "physical_state": "California",
                    "postal_suburb": "Suburb",
                    "postal_city": "Los Angeles",
                    "postal_state": "California",
                    "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "enable_loyalty": true,
                    "created_at": "2014-10-09T05:20:09+00:00",
                    "updated_at": "2017-01-19T16:49:35+00:00",
                    "deleted_at": null,
                    "version": 2691964626,
                    "postal_postcode": "23422",
                    "name": "Anthony Stark",
                    "physical_address_1": "Street 1",
                    "physical_address_2": "Street 2",
                    "physical_country_id": "NZ",
                    "postal_address_1": "Street 1",
                    "postal_address_2": "Street 2",
                    "postal_country_id": "NZ",
                    "custom_field_1": "test",
                    "custom_field_2": "",
                    "custom_field_3": "",
                    "custom_field_4": ""
                  },
                  {
                    "id": "06bf537b-c783-11e6-ff13-f21286299973",
                    "customer_code": "UNNAMED-669D",
                    "first_name": null,
                    "last_name": null,
                    "email": null,
                    "year_to_date": 0,
                    "balance": 0,
                    "loyalty_balance": 0,
                    "note": null,
                    "gender": null,
                    "date_of_birth": null,
                    "company_name": null,
                    "do_not_email": false,
                    "phone": null,
                    "mobile": null,
                    "fax": null,
                    "twitter": null,
                    "website": null,
                    "physical_suburb": null,
                    "physical_city": null,
                    "physical_postcode": null,
                    "physical_state": null,
                    "postal_suburb": null,
                    "postal_city": null,
                    "postal_state": null,
                    "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "enable_loyalty": true,
                    "created_at": "2017-02-13T17:33:25+00:00",
                    "updated_at": "2017-02-13T17:33:25+00:00",
                    "deleted_at": null,
                    "version": 2847386277,
                    "postal_postcode": null,
                    "name": null,
                    "physical_address_1": null,
                    "physical_address_2": null,
                    "physical_country_id": null,
                    "postal_address_1": null,
                    "postal_address_2": null,
                    "postal_country_id": null,
                    "custom_field_1": null,
                    "custom_field_2": null,
                    "custom_field_3": null,
                    "custom_field_4": null
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new customer.",
        "summary": "Create a new customer",
        "tags": [
          "Customers"
        ],
        "operationId": "CreateCustomer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerBase"
            },
            "x-examples": {
              "application/json": {
                "first_name": "Tony",
                "last_name": "Stark",
                "email": "tony@starkinc.com"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            },
            "examples": {
              "new": {
                "data": {
                  "id": "0af7b240-ab83-11e7-eddc-4023c64c85e5",
                  "customer_code": "Tony-37YP",
                  "name": "Tony Stark",
                  "first_name": "Tony",
                  "last_name": "Stark",
                  "email": "tony@starkinc.com",
                  "year_to_date": 0,
                  "balance": 0,
                  "loyalty_balance": 0,
                  "note": null,
                  "gender": null,
                  "date_of_birth": null,
                  "company_name": null,
                  "do_not_email": false,
                  "contact_source": null,
                  "phone": null,
                  "mobile": null,
                  "fax": null,
                  "twitter": null,
                  "website": null,
                  "physical_address_1": null,
                  "physical_address_2": null,
                  "physical_suburb": null,
                  "physical_city": null,
                  "physical_postcode": null,
                  "physical_state": null,
                  "physical_country_id": null,
                  "postal_address_1": null,
                  "postal_address_2": null,
                  "postal_suburb": null,
                  "postal_city": null,
                  "postal_postcode": null,
                  "postal_state": null,
                  "postal_country_id": null,
                  "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                  "enable_loyalty": true,
                  "custom_field_1": null,
                  "custom_field_2": null,
                  "custom_field_3": null,
                  "custom_field_4": null,
                  "created_at": "2017-05-24T01:53:25+00:00",
                  "updated_at": "2017-05-24T01:53:25+00:00",
                  "deleted_at": null,
                  "version": 3505346597
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "description": "Returns a single customer with a requested ID.",
        "summary": "Get a single customer",
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomerByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid customer ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-4f73f02a9d1c",
                  "customer_code": "Tony-N4ZJ",
                  "first_name": "Anthony",
                  "last_name": "Stark",
                  "email": "tony@stark.com",
                  "year_to_date": 0,
                  "balance": -25840.85,
                  "loyalty_balance": 5809.64,
                  "note": "",
                  "gender": "M",
                  "date_of_birth": "1963-03-03",
                  "company_name": "Stark Industries Inc",
                  "do_not_email": false,
                  "phone": "+001 555 12345678",
                  "mobile": "+001 485 23456789",
                  "fax": "+001 555 12345345",
                  "twitter": "@ironman",
                  "website": "http://www.starkinc.com",
                  "physical_suburb": "Suburb",
                  "physical_city": "Los Angeles",
                  "physical_postcode": "23422",
                  "physical_state": "California",
                  "postal_suburb": "Suburb",
                  "postal_city": "Los Angeles",
                  "postal_state": "California",
                  "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                  "enable_loyalty": true,
                  "created_at": "2014-10-09T05:20:09+00:00",
                  "updated_at": "2017-01-19T16:49:35+00:00",
                  "deleted_at": null,
                  "version": 2691964626,
                  "postal_postcode": "23422",
                  "name": "Anthony Stark",
                  "physical_address_1": "Street 1",
                  "physical_address_2": "Street 2",
                  "physical_country_id": "NZ",
                  "postal_address_1": "Street 1",
                  "postal_address_2": "Street 2",
                  "postal_country_id": "NZ",
                  "custom_field_1": "test",
                  "custom_field_2": "",
                  "custom_field_3": "",
                  "custom_field_4": ""
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates the customer with the requested ID.",
        "summary": "Update a customer",
        "tags": [
          "Customers"
        ],
        "operationId": "UpdateCustomerByID",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid customer ID."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerBase"
            },
            "x-examples": {
              "application/json": {
                "id": "0af7b240-ab83-11e7-eddc-4025043113d5",
                "customer_code": "Tony-AB2W",
                "name": "Tony Stark",
                "first_name": "Tony",
                "last_name": "Stark",
                "email": "tony@starkinc.com",
                "year_to_date": 0,
                "balance": 0,
                "loyalty_balance": 0,
                "note": null,
                "gender": null,
                "date_of_birth": null,
                "company_name": "Stark Inc.",
                "do_not_email": false,
                "contact_source": null,
                "phone": null,
                "mobile": null,
                "fax": null,
                "twitter": null,
                "website": null,
                "physical_address_1": null,
                "physical_address_2": null,
                "physical_suburb": null,
                "physical_city": null,
                "physical_postcode": null,
                "physical_state": null,
                "physical_country_id": null,
                "postal_address_1": null,
                "postal_address_2": null,
                "postal_suburb": null,
                "postal_city": null,
                "postal_postcode": null,
                "postal_state": null,
                "postal_country_id": null,
                "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                "enable_loyalty": true,
                "custom_field_1": "Custom value 1",
                "custom_field_2": "Custom value 2",
                "custom_field_3": "Custom value 3",
                "custom_field_4": "Custom value 4"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "0af7b240-ab83-11e7-eddc-4025043113d5",
                  "customer_code": "Tony-AB2W",
                  "name": "Tony Stark",
                  "first_name": "Tony",
                  "last_name": "Stark",
                  "email": "tony@starkinc.com",
                  "year_to_date": 0,
                  "balance": 0,
                  "loyalty_balance": 0,
                  "note": null,
                  "gender": null,
                  "date_of_birth": null,
                  "company_name": "Stark Inc.",
                  "do_not_email": false,
                  "contact_source": null,
                  "phone": null,
                  "mobile": null,
                  "fax": null,
                  "twitter": null,
                  "website": null,
                  "physical_address_1": null,
                  "physical_address_2": null,
                  "physical_suburb": null,
                  "physical_city": null,
                  "physical_postcode": null,
                  "physical_state": null,
                  "physical_country_id": null,
                  "postal_address_1": null,
                  "postal_address_2": null,
                  "postal_suburb": null,
                  "postal_city": null,
                  "postal_postcode": null,
                  "postal_state": null,
                  "postal_country_id": null,
                  "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                  "enable_loyalty": true,
                  "custom_field_1": "Custom value 1",
                  "custom_field_2": "Custom value 2",
                  "custom_field_3": "Custom value 3",
                  "custom_field_4": "Custom value 4",
                  "created_at": "2017-05-24T02:02:18+00:00",
                  "updated_at": "2017-05-24T02:03:59+00:00",
                  "deleted_at": null,
                  "version": 3505431251
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the customer with the requested ID.",
        "summary": "Delete a customer",
        "tags": [
          "Customers"
        ],
        "operationId": "DeleteCustomerByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid customer ID."
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/inventory": {
      "get": {
        "description": "Returns a paginated list of inventory records.",
        "summary": "List inventory records",
        "tags": [
          "Inventory"
        ],
        "operationId": "ListInventoryRecords",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "7896f269-2b20-ff38-602a-ace60b172b12",
                    "product_id": "a0369f1f-9083-11e4-f68e-d26298afef03",
                    "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "inventory_level": 0,
                    "reorder_point": null,
                    "reorder_amount": null,
                    "version": 1639940
                  },
                  {
                    "id": "c15190b9-0c37-6b52-54e2-f804b00fa8c5",
                    "product_id": "a0369f1f-9083-11e4-f68e-d26298afef03",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "inventory_level": 0,
                    "reorder_point": null,
                    "reorder_amount": null,
                    "version": 1639941
                  },
                  {
                    "id": "0b32fb5c-9cff-5d26-2b64-1593ed2a463b",
                    "product_id": "a0369f1f-9083-11e4-f68e-cc284567c50d",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "inventory_level": -10,
                    "reorder_point": null,
                    "reorder_amount": null,
                    "version": 3426971
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/outlet_taxes": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OutletTaxCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-281af7f3d091",
                    "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "deleted_at": null,
                    "version": 2162167
                  },
                  {
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-281b151ee9a6",
                    "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "deleted_at": null,
                    "version": 2162183
                  },
                  {
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "product_id": "b8ca3a64-f883-11e4-e0f5-15e94b089bc5",
                    "tax_id": "b1cecdf6-f019-11e3-a0f5-b8ca3a64f8f4",
                    "deleted_at": null,
                    "version": 10734484
                  }
                ],
                "version": {
                  "min": 2162167,
                  "max": 10734484
                }
              }
            }
          }
        },
        "operationId": "listOutletProductTaxes",
        "tags": [
          "Outlet Product Taxes"
        ],
        "summary": "List outlet product taxes",
        "description": "Returns a paginated list of outlet-product-tax records.",
        "parameters": [
          {
            "in": "query",
            "name": "outlet_id",
            "type": "string",
            "description": "The ID of the outlet for which the results should be returned."
          },
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/Deleted"
          }
        ]
      }
    },
    "/outlets": {
      "get": {
        "description": "Returns a collection of outlets.",
        "summary": "List outlets",
        "tags": [
          "Outlets"
        ],
        "operationId": "ListOutlets",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/Deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OutletCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "name": "Second Outlet",
                    "default_tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "currency": "NZD",
                    "currency_symbol": "$",
                    "display_prices": "inclusive",
                    "time_zone": "Pacific/Auckland",
                    "physical_address_1": "Nuffield Street",
                    "physical_address_2": "",
                    "physical_suburb": "Newmarket",
                    "physical_city": "Auckland",
                    "physical_postcode": "1023",
                    "physical_state": "Auckland",
                    "physical_country_id": "NZ",
                    "deleted_at": null,
                    "version": 816974914,
                    "attributes": []
                  },
                  {
                    "id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "Main Outlet",
                    "default_tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "currency": "NZD",
                    "currency_symbol": "$",
                    "display_prices": "inclusive",
                    "time_zone": "Pacific/Auckland",
                    "physical_address_1": "Baker Street",
                    "physical_address_2": "",
                    "physical_suburb": "",
                    "physical_city": "London",
                    "physical_postcode": "",
                    "physical_state": "",
                    "physical_country_id": "GB",
                    "deleted_at": null,
                    "version": 909257071,
                    "attributes": []
                  },
                  {
                    "id": "06bf537b-c783-11e6-f6b9-53a81bd6b215",
                    "name": "Sydney",
                    "default_tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "currency": "NZD",
                    "currency_symbol": "$",
                    "display_prices": "inclusive",
                    "time_zone": "Australia/Sydney",
                    "physical_address_1": "",
                    "physical_address_2": "",
                    "physical_suburb": "",
                    "physical_city": "Sydney",
                    "physical_postcode": "",
                    "physical_state": "NSW",
                    "physical_country_id": "AU",
                    "deleted_at": null,
                    "version": 1690497245,
                    "attributes": [
                      {
                        "key": "order_reference",
                        "value": "1"
                      },
                      {
                        "key": "order_reference_prefix",
                        "value": "SYD"
                      },
                      {
                        "key": "return_reference",
                        "value": "1"
                      },
                      {
                        "key": "return_reference_prefix",
                        "value": "SYD"
                      }
                    ]
                  }
                ],
                "version": {
                  "max": 1690497245,
                  "min": 816974914
                }
              }
            }
          }
        }
      }
    },
    "/outlets/{outlet_id}": {
      "get": {
        "description": "Returns a single outlet with the requested ID.",
        "summary": "Get a single outlet",
        "tags": [
          "Outlets"
        ],
        "operationId": "GetOutletByID",
        "parameters": [
          {
            "name": "outlet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid Outlet ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OutletResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                  "name": "Second Outlet",
                  "default_tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                  "currency": "NZD",
                  "currency_symbol": "$",
                  "display_prices": "inclusive",
                  "time_zone": "Pacific/Auckland",
                  "physical_address_1": "Nuffield Street",
                  "physical_address_2": "",
                  "physical_suburb": "Newmarket",
                  "physical_city": "Auckland",
                  "physical_postcode": "1023",
                  "physical_state": "Auckland",
                  "physical_country_id": "NZ",
                  "deleted_at": null,
                  "version": 816974914,
                  "attributes": []
                }
              }
            }
          }
        }
      }
    },
    "/payment_types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentTypeCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "0adaafb3-6583-11e5-fb60-fd093076e9d3",
                    "name": "Gift Card",
                    "type_id": 118,
                    "config": null,
                    "deleted_at": null,
                    "version": 1120194938
                  },
                  {
                    "id": "dc85058a-a683-11e5-e112-51cc5a8ffc96",
                    "name": "Loyalty",
                    "type_id": 106,
                    "config": {
                      "url": "/pay/dc85058a-a683-11e5-e112-51cc5a8ffc96"
                    },
                    "deleted_at": null,
                    "version": 342955
                  },
                  {
                    "id": "dc85058a-a683-11e5-ef46-0b1f0d167dea",
                    "name": "DPS",
                    "type_id": 3,
                    "config": {
                      "url": "https://sec.paymentexpress.com/pxmi/logon",
                      "print": true
                    },
                    "deleted_at": null,
                    "version": 297938
                  }
                ],
                "version": {
                  "max": 1120194938,
                  "min": 297938
                }
              }
            }
          }
        },
        "tags": [
          "Payment Types"
        ],
        "operationId": "ListPaymentTypes",
        "summary": "List payment types",
        "description": "Returns a paginated collection of payment types."
      }
    },
    "/price_book_products": {
      "get": {
        "description": "Returns a paginated list of price book products.",
        "summary": "List price book products",
        "tags": [
          "Price Book Products"
        ],
        "operationId": "ListPriceBookProducts",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceBookProductCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "327a1b25-4a47-9ba7-15cd-f65dfb3f06e2",
                    "product_id": "9a84e9e1-f038-11e3-a0f5-b8ca3a64f8f4",
                    "price_book_id": "b1cc4593-f019-11e3-a0f5-b8ca3a64f8f4",
                    "price": 0,
                    "loyalty_value": null,
                    "min_units": null,
                    "max_units": null,
                    "version": 74322454,
                    "created_at": "2014-06-10T00:46:05+00:00",
                    "updated_at": "2014-06-10T00:46:05+00:00",
                    "deleted_at": null
                  },
                  {
                    "id": "dc85058a-a683-11e4-ef46-e15361f7916a",
                    "product_id": "188a87aa-06fe-11e4-a0f5-b8ca3a64f8f4",
                    "price_book_id": "dc85058a-a683-11e4-ef46-e1535cf1ebe5",
                    "price": 246.92,
                    "loyalty_value": 22,
                    "min_units": 12.5,
                    "max_units": 43.2,
                    "version": 94533112,
                    "created_at": "2014-07-09T00:15:13+00:00",
                    "updated_at": "2016-04-13T22:27:29+00:00",
                    "deleted_at": null
                  },
                  {
                    "id": "dc85058a-a683-11e5-ef46-0fe437d43747",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-6ba391393b6e",
                    "price_book_id": "dc85058a-a683-11e4-ef46-e1535cf1ebe5",
                    "price": 1200,
                    "loyalty_value": null,
                    "min_units": null,
                    "max_units": null,
                    "version": 107001929,
                    "created_at": "2014-11-14T02:11:38+00:00",
                    "updated_at": "2015-06-11T02:47:49+00:00",
                    "deleted_at": null
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/price_books": {
      "get": {
        "description": "Returns a paginated list of price books",
        "summary": "List price books",
        "tags": [
          "Price Books"
        ],
        "operationId": "ListPriceBooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceBookCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b1cc4593-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "General Price Book (All Products)",
                    "type": "BASE",
                    "valid_from": null,
                    "valid_to": null,
                    "restrict_to_platform_key": "1",
                    "restrict_to_platform_label": "In Store",
                    "customer_group": {
                      "id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                      "name": "All Customers",
                      "group_id": "1111111111",
                      "version": 29483,
                      "created_at": "2014-06-09T21:04:49+00:00",
                      "updated_at": "2014-06-09T21:04:49+00:00",
                      "deleted_at": null
                    },
                    "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "outlet": null,
                    "outlet_id": null,
                    "version": 368354,
                    "deleted_at": null
                  },
                  {
                    "id": "dc85058a-a683-11e4-ef46-e2ecc5bda31a",
                    "name": "API test",
                    "type": "GENERAL",
                    "valid_from": null,
                    "valid_to": null,
                    "restrict_to_platform_key": "1",
                    "restrict_to_platform_label": "In Store",
                    "customer_group": {
                      "id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                      "name": "All Customers",
                      "group_id": "1111111111",
                      "version": 29483,
                      "created_at": "2014-06-09T21:04:49+00:00",
                      "updated_at": "2014-06-09T21:04:49+00:00",
                      "deleted_at": null
                    },
                    "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "outlet": null,
                    "outlet_id": null,
                    "version": 398146,
                    "deleted_at": null
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/price_books/{price_book_id}": {
      "get": {
        "description": "Returns a single price book with a requested ID",
        "summary": "Get a single price book",
        "tags": [
          "Price Books"
        ],
        "operationId": "GetPriceBookbyID",
        "parameters": [
          {
            "name": "price_book_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid price book ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceBookResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b1cc4593-f019-11e3-a0f5-b8ca3a64f8f4",
                  "name": "General Price Book (All Products)",
                  "type": "BASE",
                  "valid_from": null,
                  "valid_to": null,
                  "restrict_to_platform_key": 1,
                  "restrict_to_platform_label": "In Store",
                  "customer_group": {
                    "id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "All Customers",
                    "group_id": "1111111111",
                    "version": 29483,
                    "created_at": "2014-06-09T21:04:49+00:00",
                    "updated_at": "2014-06-09T21:04:49+00:00",
                    "deleted_at": null
                  },
                  "customer_group_id": "b1ca8902-f019-11e3-a0f5-b8ca3a64f8f4",
                  "outlet": null,
                  "outlet_id": null,
                  "version": 368354,
                  "deleted_at": null
                }
              }
            }
          }
        }
      }
    },
    "/product_images/{product_image_id}": {
      "get": {
        "description": "Returns the metadata for a single product image with a given ID.\nThis method is useful for checking the status of an image after it was uploaded.",
        "summary": "Get a single product_image data",
        "tags": [
          "Product Images"
        ],
        "operationId": "GetProductImageDataByID",
        "parameters": [
          {
            "name": "product_image_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid product ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageResponse"
            }
          }
        }
      },
      "put": {
        "description": "Allows for changing the image position in the list",
        "summary": "Set image position",
        "tags": [
          "Product Images"
        ],
        "operationId": "SetImagePosition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImagePosition"
            }
          },
          {
            "name": "product_image_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the product_image with the requested ID.",
        "summary": "Delete a product_image",
        "tags": [
          "Product Images"
        ],
        "operationId": "DeleteProductImageByID",
        "parameters": [
          {
            "name": "product_image_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/product_types": {
      "get": {
        "description": "Returns a paginated list of product types.",
        "summary": "List product types",
        "tags": [
          "Product Types"
        ],
        "operationId": "ListProductTypes",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductTypeCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b1e2babe-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "General",
                    "deleted_at": null,
                    "version": 449902
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-3a61730ca2ef",
                    "name": "Test type",
                    "deleted_at": null,
                    "version": 551718
                  },
                  {
                    "id": "bc305bf6-6183-11e4-f15a-162d346b231e",
                    "name": "Enrollment Packages",
                    "deleted_at": null,
                    "version": 627462
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/product_types/{product_type_id}": {
      "get": {
        "description": "Returns a single product type with a given ID.",
        "summary": "Get a single product type",
        "tags": [
          "Product Types"
        ],
        "operationId": "GetProductTypeByID",
        "parameters": [
          {
            "name": "product_type_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid product type ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductTypeResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b1e2babe-f019-11e3-a0f5-b8ca3a64f8f4",
                  "name": "General",
                  "deleted_at": null,
                  "version": 449902
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "description": "Returns a paginated list of products.",
        "summary": "List products",
        "tags": [
          "Products"
        ],
        "operationId": "ListProducts",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/Deleted"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-9776c5cd0240",
                    "source_id": null,
                    "source_variant_id": null,
                    "variant_parent_id": null,
                    "name": "Product 0003",
                    "variant_name": "Product 0003",
                    "handle": "0003",
                    "sku": "0003",
                    "supplier_code": null,
                    "active": true,
                    "has_inventory": true,
                    "is_composite": false,
                    "description": null,
                    "image_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-standard.png",
                    "created_at": "2015-01-08T20:41:50+00:00",
                    "updated_at": "2015-08-18T23:28:00+00:00",
                    "deleted_at": null,
                    "source": "USER",
                    "account_code": null,
                    "account_code_purchase": null,
                    "supply_price": 0,
                    "version": 59780745,
                    "type": null,
                    "supplier": null,
                    "brand": null,
                    "variant_options": [],
                    "categories": [],
                    "images": [],
                    "has_variants": false,
                    "button_order": 0,
                    "price_including_tax": 3.02632,
                    "price_excluding_tax": 2.63158,
                    "loyalty_amount": null,
                    "supplier_id": null,
                    "product_type_id": null,
                    "brand_id": null,
                    "is_active": true,
                    "image_thumbnail_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-thumb.png",
                    "tag_ids": [],
                    "attributes": []
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-9776c5faaed2",
                    "source_id": null,
                    "source_variant_id": null,
                    "variant_parent_id": null,
                    "name": "Product 0005",
                    "variant_name": "Product 0005",
                    "handle": "0005",
                    "sku": "0005",
                    "supplier_code": null,
                    "active": true,
                    "has_inventory": true,
                    "is_composite": false,
                    "description": null,
                    "image_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-standard.png",
                    "created_at": "2015-01-08T20:41:51+00:00",
                    "updated_at": "2015-08-18T23:28:00+00:00",
                    "deleted_at": null,
                    "source": "USER",
                    "account_code": null,
                    "account_code_purchase": null,
                    "supply_price": 0,
                    "version": 59780753,
                    "type": null,
                    "supplier": null,
                    "brand": null,
                    "variant_options": [],
                    "categories": [],
                    "images": [],
                    "has_variants": false,
                    "button_order": 0,
                    "price_including_tax": 5.04385,
                    "price_excluding_tax": 4.38596,
                    "loyalty_amount": null,
                    "supplier_id": null,
                    "product_type_id": null,
                    "brand_id": null,
                    "is_active": true,
                    "image_thumbnail_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-thumb.png",
                    "tag_ids": [],
                    "attributes": []
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-9776c611d865",
                    "source_id": null,
                    "source_variant_id": null,
                    "variant_parent_id": null,
                    "name": "Product 0006",
                    "variant_name": "Product 0006",
                    "handle": "0006",
                    "sku": "0006",
                    "supplier_code": null,
                    "active": true,
                    "has_inventory": true,
                    "is_composite": false,
                    "description": null,
                    "image_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-standard.png",
                    "created_at": "2015-01-08T20:41:51+00:00",
                    "updated_at": "2015-08-18T23:28:00+00:00",
                    "deleted_at": null,
                    "source": "USER",
                    "account_code": null,
                    "account_code_purchase": null,
                    "supply_price": 0,
                    "version": 59780757,
                    "type": null,
                    "supplier": null,
                    "brand": null,
                    "variant_options": [],
                    "categories": [],
                    "images": [],
                    "has_variants": false,
                    "button_order": 0,
                    "price_including_tax": 6.05263,
                    "price_excluding_tax": 5.26316,
                    "loyalty_amount": null,
                    "supplier_id": null,
                    "product_type_id": null,
                    "brand_id": null,
                    "is_active": true,
                    "image_thumbnail_url": "https://secure.vendhq.com/images/placeholder/product/no-image-white-thumb.png",
                    "tag_ids": [],
                    "attributes": []
                  }
                ],
                "version": {
                  "min": 59780745,
                  "max": 59780757
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "description": "Returns a single product object with a given ID.",
        "summary": "Get a single product",
        "tags": [
          "Products"
        ],
        "operationId": "GetProductByID",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid product ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-7988a6ed80f8",
                  "source_id": null,
                  "source_variant_id": null,
                  "variant_parent_id": null,
                  "name": "Bravo",
                  "variant_name": "Bravo / Black / Cotton / Cotton",
                  "handle": "bravo",
                  "sku": "787878",
                  "supplier_code": "123456",
                  "active": true,
                  "has_inventory": true,
                  "is_composite": false,
                  "description": "<p>The best product ever, except for the next one.</p>",
                  "image_url": "https://vendimageuploadcdn.global.ssl.fastly.net/350,fit,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                  "created_at": "2014-12-01T18:34:15+00:00",
                  "updated_at": "2017-08-21T23:50:39+00:00",
                  "deleted_at": null,
                  "source": "USER",
                  "account_code": null,
                  "account_code_purchase": null,
                  "supply_price": 100,
                  "version": 4284638488,
                  "type": {
                    "id": "b1e2babe-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "General",
                    "deleted_at": null,
                    "version": 449902
                  },
                  "supplier": {
                    "id": "dc85058a-a683-11e5-ef46-08f9a926615e",
                    "name": "Peak",
                    "source": "",
                    "description": "",
                    "deleted_at": null,
                    "version": 2089502
                  },
                  "brand": {
                    "id": "0adaafb3-6583-11e5-fb60-d5b67a17df2f",
                    "name": "Peak Performance",
                    "deleted_at": null,
                    "version": 882391722
                  },
                  "variant_options": [
                    {
                      "id": "9a972fbe-3b53-102e-b60f-4abbcbc88955",
                      "name": "Color",
                      "value": "Black"
                    },
                    {
                      "id": "6b8f11e2-5188-11e0-9d7a-4040f540b50a",
                      "name": "Fabric",
                      "value": "Cotton"
                    },
                    {
                      "id": "6b8f11e2-5188-11e0-9d7a-4040f540b50a",
                      "name": "Fabric",
                      "value": "Cotton"
                    }
                  ],
                  "categories": [
                    {
                      "id": "b8ca3a65-0183-11e4-fbb5-a7e973b74d92",
                      "name": "tag_test",
                      "deleted_at": null,
                      "version": 1446856
                    },
                    {
                      "id": "bc305bf6-6183-11e4-f15a-16ced23b8465",
                      "name": "variant",
                      "deleted_at": null,
                      "version": 961180
                    }
                  ],
                  "images": [
                    {
                      "id": "06bf537b-c783-11e6-f6b9-b73917d393b6",
                      "url": "https://vendimageuploadcdn.global.ssl.fastly.net/1920,fit/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                      "version": 2398861114,
                      "sizes": {
                        "ss": "https://vendimageuploadcdn.global.ssl.fastly.net/50x50,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "standard": "https://vendimageuploadcdn.global.ssl.fastly.net/350,fit,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "st": "https://vendimageuploadcdn.global.ssl.fastly.net/40x40,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "original": "https://vendimageuploadcdn.global.ssl.fastly.net/1920,fit/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "thumb": "https://vendimageuploadcdn.global.ssl.fastly.net/160,fit,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "sl": "https://vendimageuploadcdn.global.ssl.fastly.net/150x150,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                        "sm": "https://vendimageuploadcdn.global.ssl.fastly.net/100x100,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg"
                      }
                    }
                  ],
                  "has_variants": true,
                  "button_order": 2,
                  "price_including_tax": 126.5,
                  "price_excluding_tax": 110,
                  "loyalty_amount": null,
                  "attributes": [],
                  "supplier_id": "dc85058a-a683-11e5-ef46-08f9a926615e",
                  "product_type_id": "b1e2babe-f019-11e3-a0f5-b8ca3a64f8f4",
                  "brand_id": "0adaafb3-6583-11e5-fb60-d5b67a17df2f",
                  "is_active": true,
                  "image_thumbnail_url": "https://vendimageuploadcdn.global.ssl.fastly.net/160,fit,q90/vend-images/product/original/f/0/f0ebadbc30947444d438678a4a7bd6d996f392fc.jpg",
                  "tag_ids": [
                    "b8ca3a65-0183-11e4-fbb5-a7e973b74d92",
                    "bc305bf6-6183-11e4-f15a-16ced23b8465"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}/actions/image_upload": {
      "post": {
        "description": "Upload a binary file with an image to be used for a product. This request should be encoded as `multipart/form-data`.",
        "summary": "Upload an image",
        "tags": [
          "Products"
        ],
        "operationId": "UploadImage",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "UUID",
            "description": "The ID of the product which the imaged should be associated with."
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "File to upload. Can be in `jpg` or `png` format.",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageResponse"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/products/{product_id}/inventory": {
      "get": {
        "description": "Returns inventory data for a single product in all the outlets.",
        "summary": "Get inventory data for a single product",
        "tags": [
          "Products"
        ],
        "operationId": "GetInventoryByProductID",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid product ID."
          },
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "18e86393-ebdf-fbba-5455-4120bc6773fd",
                    "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-7988a6ed80f8",
                    "inventory_level": 21,
                    "current_amount": 21,
                    "version": 2398817047,
                    "deleted_at": null,
                    "average_cost": 100,
                    "reorder_point": 5,
                    "reorder_amount": 20
                  },
                  {
                    "id": "eb650394-9d49-8985-41f5-51507838d3b7",
                    "outlet_id": "06bf537b-c783-11e6-f6b9-53a81bd6b215",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-7988a6ed80f8",
                    "inventory_level": 42,
                    "current_amount": 42,
                    "version": 2398817048,
                    "deleted_at": null,
                    "average_cost": 100,
                    "reorder_point": 5,
                    "reorder_amount": 20
                  },
                  {
                    "id": "a020eed7-7f96-3b50-e133-a435dfbc242b",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "product_id": "b8ca3a65-0183-11e4-fbb5-7988a6ed80f8",
                    "inventory_level": 19,
                    "current_amount": 19,
                    "version": 3630064802,
                    "deleted_at": null,
                    "average_cost": 0,
                    "reorder_point": 5,
                    "reorder_amount": 20
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/registers": {
      "get": {
        "description": "Returns a paginated list of registers.",
        "summary": "List registers",
        "tags": [
          "Registers"
        ],
        "operationId": "ListRegisters",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/Deleted"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterCollection"
            },
            "examples": {
              "new": {
                "data": [
                  {
                    "id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "Main Register",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "ask_for_note_on_save": 1,
                    "print_note_on_receipt": false,
                    "ask_for_user_on_sale": false,
                    "show_discounts_on_receipts": true,
                    "print_receipt": true,
                    "email_receipt": true,
                    "invoice_prefix": "MR-",
                    "invoice_suffix": "-NZ",
                    "invoice_sequence": 1708,
                    "button_layout_id": "d656e8e1-7be7-11e4-9bb5-b8ca3a65011c",
                    "is_open": true,
                    "is_quick_keys_enabled": true,
                    "deleted_at": null,
                    "register_open_time": "2017-05-05T05:58:53+00:00",
                    "register_close_time": null,
                    "register_open_sequence_id": "06bf537b-c783-11e7-ff13-3157eb615f96",
                    "cash_managed_payment_type_id": "b1e1d70e-f019-11e3-a0f5-b8ca3a64f8f4",
                    "version": 3391483933
                  },
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-2816e25ffc51",
                    "name": "Second Register",
                    "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "ask_for_note_on_save": 1,
                    "print_note_on_receipt": false,
                    "ask_for_user_on_sale": false,
                    "show_discounts_on_receipts": true,
                    "print_receipt": true,
                    "email_receipt": false,
                    "invoice_prefix": "S",
                    "invoice_suffix": "",
                    "invoice_sequence": 3,
                    "button_layout_id": null,
                    "is_open": true,
                    "is_quick_keys_enabled": true,
                    "deleted_at": null,
                    "register_open_time": "2015-03-16T22:21:50+00:00",
                    "register_close_time": null,
                    "register_open_sequence_id": "a0369f1f-9083-11e4-f68e-cc2ad7a415de",
                    "cash_managed_payment_type_id": null,
                    "version": 709083
                  },
                  {
                    "id": "06e35f89-3783-11e6-ec7e-10e1180eba6d",
                    "name": "Third register",
                    "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                    "ask_for_note_on_save": 1,
                    "print_note_on_receipt": false,
                    "ask_for_user_on_sale": false,
                    "show_discounts_on_receipts": true,
                    "print_receipt": true,
                    "email_receipt": false,
                    "invoice_prefix": "Th",
                    "invoice_suffix": "X",
                    "invoice_sequence": 3,
                    "button_layout_id": null,
                    "is_open": true,
                    "is_quick_keys_enabled": true,
                    "deleted_at": null,
                    "register_open_time": "2016-05-03T03:43:04+00:00",
                    "register_close_time": null,
                    "register_open_sequence_id": "06e35f89-3783-11e6-ec7e-10e124cb1e78",
                    "cash_managed_payment_type_id": null,
                    "version": 1234541473
                  }
                ],
                "version": {
                  "max": 3391483933,
                  "min": 709083
                }
              }
            }
          }
        }
      }
    },
    "/registers/{register_id}": {
      "get": {
        "description": "Returns a single register with the requested ID.",
        "summary": "Get a single register",
        "tags": [
          "Registers"
        ],
        "operationId": "GetRegisterByID",
        "parameters": [
          {
            "name": "register_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid register ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-2816e25ffc51",
                  "name": "Second Register",
                  "outlet_id": "b8ca3a65-0183-11e4-fbb5-2816d2677218",
                  "ask_for_note_on_save": 1,
                  "print_note_on_receipt": false,
                  "ask_for_user_on_sale": false,
                  "show_discounts_on_receipts": true,
                  "print_receipt": true,
                  "email_receipt": false,
                  "invoice_prefix": "S",
                  "invoice_suffix": "",
                  "invoice_sequence": 3,
                  "button_layout_id": null,
                  "is_open": true,
                  "is_quick_keys_enabled": true,
                  "deleted_at": null,
                  "register_open_time": "2015-03-16T22:21:50+00:00",
                  "register_close_time": null,
                  "register_open_sequence_id": "a0369f1f-9083-11e4-f68e-cc2ad7a415de",
                  "cash_managed_payment_type_id": null,
                  "version": 709083
                }
              }
            }
          }
        }
      }
    },
    "/sales": {
      "get": {
        "description": "Returns a paginated list of sales.",
        "summary": "List Sales",
        "tags": [
          "Sales"
        ],
        "operationId": "ListSales",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaleCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b8ca3a65-0183-11e4-fbb5-39f7fce5e39b",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                    "user_id": "b1ed6158-f019-11e3-a0f5-b8ca3a64f8f4",
                    "customer_id": "b1cabb53-f019-11e3-a0f5-b8ca3a64f8f4",
                    "invoice_number": "1036",
                    "status": "CLOSED",
                    "note": "",
                    "short_code": "xamfvy",
                    "return_for": null,
                    "total_price": 200,
                    "total_tax": 30,
                    "total_loyalty": 23,
                    "created_at": "2014-09-11T21:09:59+00:00",
                    "updated_at": "2014-09-18T01:37:59+00:00",
                    "sale_date": "2014-09-18T01:37:56+00:00",
                    "deleted_at": null,
                    "line_items": [
                      {
                        "id": "a604d16b-a999-8ae0-11e4-39f8234e68d5",
                        "product_id": "188a87aa-06fe-11e4-a0f5-b8ca3a64f8f4",
                        "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                        "discount_total": 0,
                        "discount": 0,
                        "price_total": 200,
                        "price": 200,
                        "cost_total": 100,
                        "cost": 100,
                        "tax_total": 30,
                        "tax": 30,
                        "quantity": 1,
                        "loyalty_value": 23,
                        "note": null,
                        "price_set": false,
                        "status": "CONFIRMED",
                        "sequence": 1,
                        "tax_components": [
                          {
                            "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                            "total_tax": 30
                          }
                        ],
                        "unit_cost": 100,
                        "unit_discount": 0,
                        "unit_loyalty_value": 23,
                        "unit_price": 200,
                        "unit_tax": 30,
                        "total_cost": 100,
                        "total_discount": 0,
                        "total_loyalty_value": 23,
                        "total_price": 200,
                        "total_tax": 30,
                        "is_return": false
                      },
                      {
                        "id": "b8ca3a65-0183-11e4-fbb5-39f7fcf1f2a0",
                        "product_id": "188a87aa-06fe-11e4-a0f5-b8ca3a64f8f4",
                        "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                        "discount_total": 0,
                        "discount": 0,
                        "price_total": 0,
                        "price": 0,
                        "cost_total": 100,
                        "cost": 100,
                        "tax_total": 0,
                        "tax": 0,
                        "quantity": 1,
                        "loyalty_value": 0,
                        "note": null,
                        "price_set": false,
                        "status": "CONFIRMED",
                        "sequence": 0,
                        "tax_components": [
                          {
                            "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                            "total_tax": 0
                          }
                        ],
                        "unit_cost": 100,
                        "unit_discount": 0,
                        "unit_loyalty_value": 0,
                        "unit_price": 0,
                        "unit_tax": 0,
                        "total_cost": 100,
                        "total_discount": 0,
                        "total_loyalty_value": 0,
                        "total_price": 0,
                        "total_tax": 0,
                        "is_return": false
                      }
                    ],
                    "payments": [
                      {
                        "id": "a604d16b-a999-beb5-11e4-3ed468ffbb24",
                        "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                        "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                        "retailer_payment_type_id": "b1e1d70e-f019-11e3-a0f5-b8ca3a64f8f4",
                        "payment_type_id": "1",
                        "name": "Cash",
                        "amount": 230,
                        "payment_date": "2014-09-18T01:37:54+00:00",
                        "deleted_at": null,
                        "external_attributes": [],
                        "source_id": null
                      }
                    ],
                    "version": 413,
                    "receipt_number": "1036",
                    "adjustments": [],
                    "taxes": [
                      {
                        "amount": 30,
                        "id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4"
                      }
                    ]
                  },
                  {
                    "id": "a604d16b-a999-beb5-11e4-3ed46b02a0bc",
                    "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                    "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                    "user_id": "b1ed6158-f019-11e3-a0f5-b8ca3a64f8f4",
                    "customer_id": "b1cabb53-f019-11e3-a0f5-b8ca3a64f8f4",
                    "invoice_number": "MR-1050-NZ",
                    "status": "CLOSED",
                    "note": null,
                    "short_code": "wy6cic",
                    "return_for": null,
                    "total_price": 12.91,
                    "total_tax": 1.94,
                    "total_loyalty": 1.485,
                    "created_at": "2014-09-18T03:45:48+00:00",
                    "updated_at": "2014-09-18T03:45:48+00:00",
                    "sale_date": "2014-09-18T03:45:46+00:00",
                    "deleted_at": null,
                    "line_items": [
                      {
                        "id": "a604d16b-a999-beb5-11e4-3ee641f19d10",
                        "product_id": "b1d87b58-f019-11e3-a0f5-b8ca3a64f8f4",
                        "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                        "discount_total": 0,
                        "discount": 0,
                        "price_total": 4.30435,
                        "price": 4.30435,
                        "cost_total": 2,
                        "cost": 2,
                        "tax_total": 0.64565,
                        "tax": 0.64565,
                        "quantity": 1,
                        "loyalty_value": 0.495,
                        "note": null,
                        "price_set": false,
                        "status": "CONFIRMED",
                        "sequence": 0,
                        "tax_components": [
                          {
                            "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                            "total_tax": 0.64565
                          }
                        ],
                        "unit_cost": 2,
                        "unit_discount": 0,
                        "unit_loyalty_value": 0.495,
                        "unit_price": 4.30435,
                        "unit_tax": 0.64565,
                        "total_cost": 2,
                        "total_discount": 0,
                        "total_loyalty_value": 0.495,
                        "total_price": 4.30435,
                        "total_tax": 0.64565,
                        "is_return": false
                      },
                      {
                        "id": "a604d16b-a999-beb5-11e4-3ee64209d023",
                        "product_id": "b1d87b58-f019-11e3-a0f5-b8ca3a64f8f4",
                        "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                        "discount_total": 0,
                        "discount": 0,
                        "price_total": 4.30435,
                        "price": 4.30435,
                        "cost_total": 2,
                        "cost": 2,
                        "tax_total": 0.64565,
                        "tax": 0.64565,
                        "quantity": 1,
                        "loyalty_value": 0.495,
                        "note": null,
                        "price_set": false,
                        "status": "CONFIRMED",
                        "sequence": 1,
                        "tax_components": [
                          {
                            "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                            "total_tax": 0.64565
                          }
                        ],
                        "unit_cost": 2,
                        "unit_discount": 0,
                        "unit_loyalty_value": 0.495,
                        "unit_price": 4.30435,
                        "unit_tax": 0.64565,
                        "total_cost": 2,
                        "total_discount": 0,
                        "total_loyalty_value": 0.495,
                        "total_price": 4.30435,
                        "total_tax": 0.64565,
                        "is_return": false
                      },
                      {
                        "id": "a604d16b-a999-beb5-11e4-3ee64225d058",
                        "product_id": "b1d87b58-f019-11e3-a0f5-b8ca3a64f8f4",
                        "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                        "discount_total": 0,
                        "discount": 0,
                        "price_total": 4.30435,
                        "price": 4.30435,
                        "cost_total": 2,
                        "cost": 2,
                        "tax_total": 0.64565,
                        "tax": 0.64565,
                        "quantity": 1,
                        "loyalty_value": 0.495,
                        "note": null,
                        "price_set": false,
                        "status": "CONFIRMED",
                        "sequence": 2,
                        "tax_components": [
                          {
                            "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                            "total_tax": 0.6487
                          }
                        ],
                        "unit_cost": 2,
                        "unit_discount": 0,
                        "unit_loyalty_value": 0.495,
                        "unit_price": 4.30435,
                        "unit_tax": 0.64565,
                        "total_cost": 2,
                        "total_discount": 0,
                        "total_loyalty_value": 0.495,
                        "total_price": 4.30435,
                        "total_tax": 0.64565,
                        "is_return": false
                      }
                    ],
                    "payments": [
                      {
                        "id": "a604d16b-a999-beb5-11e4-3ee6447fb058",
                        "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                        "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                        "retailer_payment_type_id": "b1e1d70e-f019-11e3-a0f5-b8ca3a64f8f4",
                        "payment_type_id": "1",
                        "name": "Cash",
                        "amount": 14.85,
                        "payment_date": "2014-09-18T03:45:44+00:00",
                        "deleted_at": null,
                        "external_attributes": [],
                        "source_id": null
                      }
                    ],
                    "version": 29316,
                    "receipt_number": "MR-1050-NZ",
                    "adjustments": [],
                    "taxes": [
                      {
                        "amount": 1.94,
                        "id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4"
                      }
                    ]
                  }
                ],
                "version": {
                  "min": 413,
                  "max": 29316
                }
              }
            }
          }
        }
      }
    },
    "/sales/{sale_id}": {
      "get": {
        "description": "Returns a single sale with a given ID.",
        "summary": "Get a single sale",
        "tags": [
          "Sales"
        ],
        "operationId": "GetSaleByID",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid sale ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaleResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b8ca3a65-0183-11e4-fbb5-39f7fce5e39b",
                  "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                  "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                  "user_id": "b1ed6158-f019-11e3-a0f5-b8ca3a64f8f4",
                  "customer_id": "b1cabb53-f019-11e3-a0f5-b8ca3a64f8f4",
                  "invoice_number": "1036",
                  "status": "CLOSED",
                  "note": "",
                  "short_code": "xamfvy",
                  "return_for": null,
                  "total_price": 201.5,
                  "total_tax": 30,
                  "total_loyalty": 23,
                  "created_at": "2014-09-11T21:09:59+00:00",
                  "updated_at": "2014-09-18T01:37:59+00:00",
                  "sale_date": "2014-09-18T01:37:56+00:00",
                  "deleted_at": null,
                  "line_items": [
                    {
                      "id": "a604d16b-a999-8ae0-11e4-39f8234e68d5",
                      "product_id": "188a87aa-06fe-11e4-a0f5-b8ca3a64f8f4",
                      "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                      "discount_total": 0,
                      "discount": 0,
                      "price_total": 200,
                      "price": 200,
                      "cost_total": 100,
                      "cost": 100,
                      "tax_total": 30,
                      "tax": 30,
                      "quantity": 1,
                      "loyalty_value": 23,
                      "note": null,
                      "price_set": false,
                      "status": "CONFIRMED",
                      "sequence": 1,
                      "tax_components": [
                        {
                          "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                          "total_tax": 30
                        }
                      ],
                      "unit_cost": 100,
                      "unit_discount": 0,
                      "unit_loyalty_value": 23,
                      "unit_price": 200,
                      "unit_tax": 30,
                      "total_cost": 100,
                      "total_discount": 0,
                      "total_loyalty_value": 23,
                      "total_price": 200,
                      "total_tax": 30,
                      "is_return": false
                    },
                    {
                      "id": "b8ca3a65-0183-11e4-fbb5-39f7fcf1f2a0",
                      "product_id": "188a87aa-06fe-11e4-a0f5-b8ca3a64f8f4",
                      "tax_id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                      "discount_total": 0,
                      "discount": 0,
                      "price_total": 0,
                      "price": 0,
                      "cost_total": 100,
                      "cost": 100,
                      "tax_total": 0,
                      "tax": 0,
                      "quantity": 1,
                      "loyalty_value": 0,
                      "note": null,
                      "price_set": false,
                      "status": "CONFIRMED",
                      "sequence": 0,
                      "tax_components": [
                        {
                          "rate_id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                          "total_tax": 0
                        }
                      ],
                      "unit_cost": 100,
                      "unit_discount": 0,
                      "unit_loyalty_value": 0,
                      "unit_price": 0,
                      "unit_tax": 0,
                      "total_cost": 100,
                      "total_discount": 0,
                      "total_loyalty_value": 0,
                      "total_price": 0,
                      "total_tax": 0,
                      "is_return": false
                    }
                  ],
                  "payments": [
                    {
                      "id": "a604d16b-a999-beb5-11e4-3ed468ffbb24",
                      "register_id": "b1e198a9-f019-11e3-a0f5-b8ca3a64f8f4",
                      "outlet_id": "b1e04bd8-f019-11e3-a0f5-b8ca3a64f8f4",
                      "retailer_payment_type_id": "b1e1d70e-f019-11e3-a0f5-b8ca3a64f8f4",
                      "payment_type_id": "1",
                      "name": "Cash",
                      "amount": 231.5,
                      "payment_date": "2014-09-18T01:37:54+00:00",
                      "deleted_at": null,
                      "external_attributes": [],
                      "source_id": null
                    }
                  ],
                  "version": 413,
                  "receipt_number": "1036",
                  "adjustments": [
                    {
                      "type": "NON_CASH_FEE",
                      "name": "Non-cash Fee",
                      "value": 1.5
                    }
                  ],
                  "taxes": [
                    {
                      "amount": 30,
                      "id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Search for resources",
        "operationId": "Search",
        "description": "This endpoint allows integrators to search all of the most commonly used resources, **sales**, **products** and **customers**. Each type allowing search by a number of different parameters.\n\n### Supported resource types and attributes\n\n- **Sales**\n  - date_from\n  - date_to\n  - status\n  - invoice_number\n  - customer_id\n  - user_id\n  - outlet_id\n- **Products**\n  - sku\n  - supplier_id\n  - brand_id\n  - tag_id\n  - product_type_id\n  - variant_parent_id\n- **Customers**\n  - customer_code\n  - first_name\n  - last_name\n  - company_name\n \n### Sorting and pagination\n\nUnlike other endpoints in the API 2.0, search results from this endpoint can be sorted by any of the attributes above. Because of that, the default [pagination](https://docs.vendhq.com/v0.9/reference#section-api-2-0) mechanism is not appropriate for this endpoint. Instead, this endpoint uses `offset` and `page_size` attributes to handle search results spanning multiple pages.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "required": true,
            "description": "The enity type to search for. One of: `sales`, `products`, `customers`.",
            "enum": [
              "sales",
              "products",
              "customers"
            ]
          },
          {
            "in": "query",
            "name": "order_by",
            "type": "string",
            "description": "The attribute used to sort items returned in the response."
          },
          {
            "in": "query",
            "name": "order_direction",
            "type": "string",
            "description": "Sorting direction. One of: `asc`, `desc`.",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "description": "The maximum number of objects to be included in the response, currently limited to 10000."
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of objects to be \"skipped\" for the response. Used for pagination."
          },
          {
            "in": "query",
            "name": "_id",
            "type": "string",
            "format": "UUID",
            "description": "The `id` of the object to be included in the response."
          },
          {
            "in": "query",
            "name": "-_id",
            "type": "string",
            "format": "UUID",
            "description": "The `id` of the object to be excluded from the response."
          },
          {
            "in": "query",
            "name": "deleted",
            "type": "boolean",
            "description": "Indicated whether deleted objects should be included in the response."
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "description": "**SALES** Status of the sale to find.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "invoice_number",
            "type": "string",
            "description": "**SALES** Invoice number of the sale."
          },
          {
            "in": "query",
            "name": "customer_id",
            "type": "string",
            "format": "UUID",
            "description": "**SALES** The `ID` of the customer associated with the sales."
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string",
            "format": "UUID",
            "description": "**SALES** The `ID` of the user associated with the sales."
          },
          {
            "in": "query",
            "name": "outlet_id",
            "type": "string",
            "format": "UUID",
            "description": "**SALES** The `ID` of the outlet associated with the sales."
          },
          {
            "in": "query",
            "name": "date_from",
            "type": "string",
            "description": "**SALES** Lower limit for the sale date as UTC timestamp. Format: `2016-08-08T12:00:00Z`."
          },
          {
            "in": "query",
            "name": "date_to",
            "type": "string",
            "description": "**SALES** Upper limit for the sale date as UTC timestamp. Format: `2016-08-08T12:00:00Z`."
          },
          {
            "in": "query",
            "name": "sku",
            "type": "string",
            "description": "**PRODUCTS** The SKU of products to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-sku",
            "type": "string",
            "description": "**PRODUCTS** The SKU of products to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "supplier_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the supplier associated with the product to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-supplier_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the supplier associated with the product to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "brand_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the brand associated with the product to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-brand_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the brand associated with the product to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the tag associated with the product to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-tag_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the brand associated with the product to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "product_type_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the product type associated with the product to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-product_type_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the product type associated with the product to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "variant_parent_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the variant parent product associated with the product to include in the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "-variant_parent_id",
            "type": "string",
            "format": "UUID",
            "description": "**PRODUCTS** The ID of the variant parent product associated with the product to exclude from the search.\nCan be used multiple times to search for objects with different values of this parameter."
          },
          {
            "in": "query",
            "name": "customer_code",
            "type": "string",
            "description": "**CUSTOMERS** The `customer_code` associated with the customer to find."
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "description": "**CUSTOMERS** The `first_name` for the customers to find."
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "description": "**CUSTOMERS** The `last_name` for the customers to find."
          },
          {
            "in": "query",
            "name": "company_name",
            "type": "string",
            "description": "**CUSTOMERS** The `company_name` for the customers to find."
          }
        ],
        "tags": [
          "Search"
        ]
      }
    },
    "/suppliers": {
      "get": {
        "description": "Returns a paginated list of suppliers.",
        "summary": "List suppliers",
        "tags": [
          "Suppliers"
        ],
        "operationId": "ListSuppliers",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "dc85058a-a683-11e5-ef46-05a1ba8c8c08",
                    "name": "Supplier post new test",
                    "source": "USER",
                    "description": null,
                    "deleted_at": null,
                    "version": 2068814
                  },
                  {
                    "id": "dc85058a-a683-11e5-ef46-08f9a926615e",
                    "name": "Peak",
                    "source": "",
                    "description": "",
                    "deleted_at": null,
                    "version": 2089502
                  },
                  {
                    "id": "dc85058a-a683-11e5-e112-5734f1f3a2ca",
                    "name": "API Supplier",
                    "source": "USER",
                    "description": "API Supplier description",
                    "deleted_at": null,
                    "version": 2555837
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/suppliers/{supplier_id}": {
      "get": {
        "summary": "Get a single supplier",
        "description": "Returns a single supplier with a given ID.",
        "operationId": "GetSupplierByID",
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "06bf537b-c783-11e7-ff13-02d1589727d5",
                  "name": "Best supplies",
                  "deleted_at": null,
                  "version": 2981942445
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "description": "Returns a collection of tags.",
        "summary": "List tags",
        "tags": [
          "Tags"
        ],
        "operationId": "ListTags",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            },
            "examples": {
              "new": {
                "data": [
                  {
                    "id": "a0bb3580-027a-11e4-a0f5-b8ca3a64f8f4",
                    "name": "test",
                    "deleted_at": null,
                    "version": 535893
                  },
                  {
                    "id": "a72bb4ec-027a-11e4-a0f5-b8ca3a64f8f4",
                    "name": "some_other_tag",
                    "deleted_at": null,
                    "version": 559284
                  },
                  {
                    "id": "b1e2e709-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "General",
                    "deleted_at": null,
                    "version": 600569
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}": {
      "get": {
        "summary": "Get a single tag",
        "description": "Returns a single tag with a given ID.",
        "operationId": "GetTagByID",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "a0bb3580-027a-11e4-a0f5-b8ca3a64f8f4",
                  "name": "test",
                  "deleted_at": null,
                  "version": 535893
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/taxes": {
      "get": {
        "description": "Returns a paginated list of taxes.",
        "summary": "List taxes",
        "tags": [
          "Taxes"
        ],
        "operationId": "ListTaxes",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TaxCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b1cecdf6-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "No Tax",
                    "version": 391487,
                    "deleted_at": null,
                    "rates": [
                      {
                        "id": "b1cfbc85-f019-11e3-a0f5-b8ca3a64f8f4",
                        "name": "No Tax",
                        "rate": 0,
                        "display_name": "No Tax"
                      }
                    ],
                    "is_default": false,
                    "display_name": "No Tax"
                  },
                  {
                    "id": "b1d192bc-f019-11e3-a0f5-b8ca3a64f8f4",
                    "name": "GST",
                    "version": 391490,
                    "deleted_at": null,
                    "rates": [
                      {
                        "id": "b1dfed8b-f019-11e3-a0f5-b8ca3a64f8f4",
                        "name": "GST",
                        "rate": 0.15,
                        "display_name": "GST"
                      }
                    ],
                    "is_default": true,
                    "display_name": "GST"
                  },
                  {
                    "id": "dc85058a-a683-11e5-e112-4600acd0096a",
                    "name": "VAT",
                    "version": 478922,
                    "deleted_at": null,
                    "rates": [
                      {
                        "id": "accff2bf-4600-11e5-8112-dc85058aa69e",
                        "name": "VAT",
                        "rate": 0.2,
                        "display_name": "VAT"
                      }
                    ],
                    "is_default": false,
                    "display_name": "VAT"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Returns a paginated list of users.",
        "summary": "List users",
        "tags": [
          "Users"
        ],
        "operationId": "ListUsers",
        "parameters": [
          {
            "$ref": "#/parameters/After"
          },
          {
            "$ref": "#/parameters/Before"
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserCollection"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "b1ed6158-f019-11e3-a0f5-b8ca3a64f8f4",
                    "username": "api@vendhq.com",
                    "display_name": "Dev Rel",
                    "email": "api@vendhq.com",
                    "email_verified_at": null,
                    "restricted_outlet_id": null,
                    "restricted_outlet_ids": [],
                    "account_type": "admin",
                    "created_at": "2014-06-09T21:04:50+00:00",
                    "updated_at": "2017-05-01T20:36:40+00:00",
                    "deleted_at": null,
                    "seen_at": "2017-05-22T00:46:59+00:00",
                    "target_daily": 1000,
                    "target_weekly": 10000,
                    "target_monthly": 50000,
                    "version": 3348795492,
                    "permissions": null,
                    "is_primary_user": true,
                    "image_source": "https://vendimageuploadcdn.global.ssl.fastly.net/50x50,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "images": {
                      "ss": "https://vendimageuploadcdn.global.ssl.fastly.net/50x50,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "standard": "https://vendimageuploadcdn.global.ssl.fastly.net/350,fit,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "st": "https://vendimageuploadcdn.global.ssl.fastly.net/40x40,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "original": "https://vendimageuploadcdn.global.ssl.fastly.net/1920,fit/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "thumb": "https://vendimageuploadcdn.global.ssl.fastly.net/160,fit,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "sl": "https://vendimageuploadcdn.global.ssl.fastly.net/150x150,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                      "sm": "https://vendimageuploadcdn.global.ssl.fastly.net/100x100,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg"
                    }
                  }
                ],
                "version": {
                  "min": 298969,
                  "max": 3348795492
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "description": "Returns a single user with the requested ID.",
        "summary": "Get a single user",
        "tags": [
          "Users"
        ],
        "operationId": "GetUserByID",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Valid user ID."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "b1ed6158-f019-11e3-a0f5-b8ca3a64f8f4",
                  "username": "api@vendhq.com",
                  "display_name": "Dev Rel",
                  "email": "api@vendhq.com",
                  "email_verified_at": null,
                  "restricted_outlet_id": null,
                  "restricted_outlet_ids": [],
                  "account_type": "admin",
                  "created_at": "2014-06-09T21:04:50+00:00",
                  "updated_at": "2017-05-01T20:36:40+00:00",
                  "deleted_at": null,
                  "seen_at": "2017-05-22T03:30:27+00:00",
                  "target_daily": 1000,
                  "target_weekly": 10000,
                  "target_monthly": 50000,
                  "version": 3348795492,
                  "permissions": null,
                  "is_primary_user": true,
                  "image_source": "https://vendimageuploadcdn.global.ssl.fastly.net/50x50,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                  "images": {
                    "ss": "https://vendimageuploadcdn.global.ssl.fastly.net/50x50,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "standard": "https://vendimageuploadcdn.global.ssl.fastly.net/350,fit,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "st": "https://vendimageuploadcdn.global.ssl.fastly.net/40x40,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "original": "https://vendimageuploadcdn.global.ssl.fastly.net/1920,fit/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "thumb": "https://vendimageuploadcdn.global.ssl.fastly.net/160,fit,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "sl": "https://vendimageuploadcdn.global.ssl.fastly.net/150x150,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg",
                    "sm": "https://vendimageuploadcdn.global.ssl.fastly.net/100x100,q90/vend-images/user/original/1/b/1ba1099aecfbbcbdfc4aa8efb136507f99a3c0d9.jpg"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/promotions": {
      "get": {
        "description": "This endpoint lists all promotions for a retailer.\n\nThere are optional query parameters that allow filtering promotions. They can't be combined:\n\n * `end_time_from` - only show promotions that have end_time after or equal to this time \n * `end_time_to` - only show promotions that have end_time before this time\n\nFor example. the time format for end_time_from and end_time_to are: `2047-06-21T13:00:00`\n\n",
        "summary": "List promotions",
        "tags": [
          "Promotions"
        ],
        "operationId": "ListPromotions",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionCollection"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "end_time_to",
            "description": "Upper limit for the promotion end date as UTC timestamp. Format: `2020-08-08T12:00:00Z`."
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_time_from",
            "description": "Lower limit for the promotion end date as UTC timestamp. Format: `2020-08-08T12:00:00Z`."
          },
          {
            "type": "integer",
            "in": "query",
            "name": "page_size",
            "description": "The maximum number of items to be returned in the response."
          }
        ]
      },
      "post": {
        "summary": "Create a promotion",
        "description": "This endpoint creates a new promotion. \n\nIt responds with the newly-created promotion, including the promotion's ID.",
        "tags": [
          "Promotions"
        ],
        "operationId": "CreatePromotion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        }
      }
    },
    "/promotions/{promotion_id}": {
      "get": {
        "summary": "Get a promotion by ID",
        "description": "This will retrieve a single promotion using the given ID.",
        "tags": [
          "Promotions"
        ],
        "operationId": "GetPromotionByID",
        "parameters": [
          {
            "name": "promotion_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        }
      },
      "put": {
        "summary": "Update a promotion",
        "description": "This endpoint updates an existing promotion by ID. \n\n * All of a promotion's fields except its id may be updated. \n * There are no partial updates. \n * All fields must be specified in the update.\n * The response contains the updated promotion object.\n",
        "tags": [
          "Promotions"
        ],
        "operationId": "UpdatePromotion",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        },
        "parameters": [
          {
            "name": "promotion_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        ]
      }
    },
    "/promotions/{promotion_id}/products": {
      "get": {
        "summary": "Get products for a promotion",
        "description": "Get a list of products applicable for this promotion, and their discount price.\n\nIt takes in `page_size`, `offset` and `name` (use for searching product by product name) as query parameters.\n\nThe endpoint returns:\n * a list of products with discount for the condition product set, and\n * another list for the action product sets. \n \n",
        "tags": [
          "Promotions"
        ],
        "operationId": "GetPromotionProducts",
        "parameters": [
          {
            "name": "promotion_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        }
      }
    },
    "/promotions/{promotion_id}/promocodes": {
      "parameters": [
        {
          "name": "promotion_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get the promo codes for a promotion",
        "description": "Get the promo codes associated with this promotion.",
        "tags": [
          "Promotions"
        ],
        "operationId": "GetPromotionPromoCodes",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionPromoCodesResponse"
            }
          }
        }
      }
    },
    "/promocode/bulk/active": {
      "post": {
        "summary": "Get the active status of promo codes",
        "description": "Get promo codes, with their associated promotions.",
        "tags": [
          "Promotions"
        ],
        "operationId": "GetActivePromoCodesBulk",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionActivePromoCodesResponse"
            }
          }
        }
      }
    },
    "/promocode/bulk": {
      "delete": {
        "summary": "Delete promo codes",
        "description": "Delete promo codes, by code",
        "tags": [
          "Promotions"
        ],
        "operationId": "DeletePromoCodesBulk",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remaining promo codes",
            "schema": {
              "$ref": "#/definitions/PromotionDeletePromoCodesResponse"
            }
          }
        }
      }
    },
    "/discount": {
      "post": {
        "summary": "Apply discounts to a sale object",
        "description": "This will find the best possible promotion to a sale, apply it and return the sale and the discount.\n\n * Despite its `POST` method, this endpoint does not modify any server-side state.\n * It is the caller's responsibility to pass along the full details of the sale, including all customer information and product information (product type, tags, etc.).\n",
        "tags": [
          "Promotions"
        ],
        "operationId": "ApplyDiscount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscountParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscountResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "title": "Action",
      "type": "object",
      "description": "Action triggered by a promotion.",
      "properties": {
        "type": {
          "description": "The type of action.",
          "type": "string",
          "enum": [
            "basic_percent_discount",
            "basic_fixed_discount",
            "fixed_discount",
            "percent_discount",
            "loyalty",
            "fixed_price_discount",
            "fixed_pool_discount",
            "percent_pool_discount"
          ]
        },
        "quantity": {
          "description": "Quantity, if required by the action type.",
          "type": "integer"
        },
        "value": {
          "description": "Value associated with the action.",
          "type": "number",
          "format": "double"
        },
        "include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "min_quantity": {
          "description": "Minimum quantity, if required by the action type.",
          "type": "integer"
        },
        "max_quantity": {
          "description": "Maximum quantity, if required by the action type.",
          "type": "integer"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "Brand": {
      "title": "Brand",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Brand name.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "BrandCollection": {
      "title": "Brand Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Brand objects wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brand"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "BrandResponse": {
      "title": "Brand Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Brand"
        }
      }
    },
    "BrandSample": {
      "title": "Brand Sample",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Channel": {
      "type": "object",
      "title": "Channel",
      "description": "An object representing a single channel.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated object ID."
        },
        "store_url": {
          "type": "string",
          "description": "The store identifier."
        },
        "channel_type": {
          "type": "string",
          "description": "The type of channel this is.",
          "enum": [
            "woocommerce"
          ]
        },
        "register_id": {
          "type": "string",
          "description": "The Vend register id that sales will be associated to."
        },
        "payment_type_id": {
          "type": "string",
          "description": "The Vend payment type id that sale payments will be associated to."
        },
        "inventory_outlet_ids": {
          "type": "array",
          "description": "The Vend outlet ids that count towards inventory.",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "created_at": {
          "type": "string",
          "description": "An RFC3339 representation of the time at which the channel was created.",
          "format": "date-time"
        },
        "sales_last_imported_at": {
          "type": "string",
          "description": "An RFC3339 representation of the time at which sales were last imported.",
          "format": "date-time"
        },
        "products_last_imported_at": {
          "type": "string",
          "description": "An RFC3339 representation of the time at which products were last imported.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "store_url",
        "channel_type",
        "sales_last_imported_at",
        "products_last_imported_at",
        "register_id",
        "payment_type_id",
        "inventory_outlet_ids"
      ]
    },
    "ChannelCollectionResponse": {
      "type": "object",
      "title": "Channels response",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      },
      "description": "A collection of channel records wrapped in a top-level data object."
    },
    "Condition": {
      "title": "Condition",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Condition type.",
          "enum": [
            "product_set",
            "sale_price"
          ]
        },
        "quantity": {
          "description": "Quantity, if required by the condition type.",
          "type": "integer"
        },
        "min_price": {
          "description": "Minimum price, if required by the condition type.",
          "type": "number",
          "format": "double"
        },
        "include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "min_quantity": {
          "description": "Minimum quantity, if required by the condition type.",
          "type": "integer"
        },
        "max_quantity": {
          "description": "Minimum quantity, if required by the condition type.",
          "type": "integer"
        }
      },
      "description": "A condition to determine whether a promotion should apply to a sale."
    },
    "Consignment": {
      "title": "Consignment",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "outlet_id": {
          "description": "A valid ID of an outlet where stock will be received.",
          "type": "string"
        },
        "name": {
          "description": "Tue 29 Nov 2016 (string) - Consignment name.",
          "type": "string"
        },
        "consignment_date": {
          "description": "11-28T19:02:15+00:00 (timestamp) - Consignment creation date.",
          "type": "string"
        },
        "due_at": {
          "description": "11-30T19:08:541+00:00 (timestamp) - Due date.",
          "type": "string"
        },
        "received_at": {
          "description": "11-30T19:08:541+00:00 (timestamp) - The date when consignment was received.",
          "type": "string"
        },
        "type": {
          "description": "One of `SUPPLIER`, `OUTLET`, `STOCKTAKE`, `RETURN`.",
          "type": "string"
        },
        "status": {
          "description": "One of `OPEN`, `RECEIVED`, `SENT`, `STOCKTAKE`, `STOCKTAKE_SCHEDULED`, `STOCKTAKE_IN_PROGRESS`, `STOCKTAKE_IN_PROGRESS_PROCESSED`, `STOCKTAKE_COMPLETE`, `CLOSED`, `CANCELLED`",
          "type": "string"
        },
        "supplier_id": {
          "description": "a valid supplier ID.",
          "type": "string"
        },
        "source_outlet_id": {
          "description": "A valid ID of an outlet where stock will come from. **Stock transfers only**.",
          "type": "string"
        },
        "supplier_invoice": {
          "description": "Supplier invoice number.",
          "type": "string"
        },
        "reference": {
          "description": "Order number.+ `total_count_gain` (number)",
          "type": "string"
        },
        "total_cost_gain": {
          "description": "The cost of items over the expected level.",
          "type": "number",
          "format": "double"
        },
        "total_count_loss": {
          "description": "The number of items below the expected level.",
          "type": "number",
          "format": "double"
        },
        "total_cost_loss": {
          "description": "The cost of items below the expected level.",
          "type": "number",
          "format": "double"
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "total_count_gain": {
          "description": "The number of items over the expected level.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsignmentCollection": {
      "title": "Consignment Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of consignment objects wrapped in a top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Consignment"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "ConsignmentProductCollection": {
      "title": "Consignment Product  Collection",
      "properties": {
        "data": {
          "description": "An array of consignment products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCountItem"
          }
        }
      },
      "type": "object"
    },
    "ConsignmentResponse": {
      "title": "Consignment Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Consignment"
        }
      }
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "Customer's first name.",
          "type": "string"
        },
        "last_name": {
          "description": "Customer 's last name.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "customer_code": {
          "description": "Customer code used for claiming loyalty.",
          "type": "string"
        },
        "customer_group_id": {
          "description": "Customer group ID.",
          "type": "string"
        },
        "enable_loyalty": {
          "description": "",
          "type": "boolean"
        },
        "email": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "note": {
          "description": "Customer note.",
          "type": "string"
        },
        "gender": {
          "description": "Customer's gender. Can be `M`, `F` or null.",
          "type": "string"
        },
        "date_of_birth": {
          "description": "Birthday.",
          "type": "string"
        },
        "company_name": {
          "description": "Company name.",
          "type": "string"
        },
        "do_not_email": {
          "default": false,
          "type": "boolean",
          "description": "Indicates whether the customer opted out of email communications."
        },
        "phone": {
          "description": "Phone no.",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile phone no.",
          "type": "string"
        },
        "fax": {
          "description": "Fax no.",
          "type": "string"
        },
        "twitter": {
          "description": "Twitter handle.",
          "type": "string"
        },
        "website": {
          "description": "Website URL.",
          "type": "string"
        },
        "physical_address_1": {
          "description": "Physical address, line 1.",
          "type": "string"
        },
        "physical_address_2": {
          "description": "Physical address, line 2.",
          "type": "string"
        },
        "physical_suburb": {
          "description": "Physical address, suburb.",
          "type": "string"
        },
        "physical_city": {
          "description": "Physical address, city.",
          "type": "string"
        },
        "physical_postcode": {
          "description": "Physical address, post code.",
          "type": "string"
        },
        "physical_state": {
          "description": "Physical address, state.",
          "type": "string"
        },
        "physical_country_id": {
          "description": "Physical address, country code.",
          "type": "string"
        },
        "postal_address_1": {
          "description": "Postal address, line 1.",
          "type": "string"
        },
        "postal_address_2": {
          "description": "Postal address, line 2.",
          "type": "string"
        },
        "postal_suburb": {
          "description": "Postal address, suburb.",
          "type": "string"
        },
        "postal_city": {
          "description": "Postal address, city.",
          "type": "string"
        },
        "postal_postcode": {
          "description": "Postal address, post code.",
          "type": "string"
        },
        "postal_state": {
          "description": "Postal address, state.",
          "type": "string"
        },
        "postal_country_id": {
          "description": "Postal address, country code.",
          "type": "string"
        },
        "custom_field_1": {
          "description": "Custom field 1. Can be used to store random data.",
          "type": "string"
        },
        "custom_field_2": {
          "description": "Custom field 2.",
          "type": "string"
        },
        "custom_field_3": {
          "description": "Custom field 3.",
          "type": "string"
        },
        "custom_field_4": {
          "description": "Custom field 4.",
          "type": "string"
        },
        "name": {
          "description": "Customers full name. **deprecated**",
          "type": "string"
        },
        "year_to_date": {
          "description": "Customer's spending this year.",
          "type": "number",
          "format": "double"
        },
        "balance": {
          "description": "Customer's unpaid balance.",
          "type": "number",
          "format": "double"
        },
        "loyalty_balance": {
          "description": "Customer's loyalty balance.",
          "type": "number",
          "format": "double"
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "first_name",
        "last_name"
      ]
    },
    "CustomerBase": {
      "title": "Customer Base",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "Customer's first name.",
          "type": "string"
        },
        "last_name": {
          "description": "Customer 's last name.",
          "type": "string"
        },
        "customer_code": {
          "description": "Customer code used for claiming loyalty.",
          "type": "string"
        },
        "customer_group_id": {
          "description": "Customer group ID.",
          "type": "string"
        },
        "enable_loyalty": {
          "description": "",
          "type": "boolean"
        },
        "email": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "note": {
          "description": "Customer note.",
          "type": "string"
        },
        "gender": {
          "description": "Customer's gender. Can be `M`, `F` or null.",
          "type": "string"
        },
        "date_of_birth": {
          "description": "Birthday.",
          "type": "string"
        },
        "company_name": {
          "description": "Company name.",
          "type": "string"
        },
        "do_not_email": {
          "default": false,
          "type": "boolean",
          "description": "Indicates whether the customer opted out of email communications."
        },
        "phone": {
          "description": "Phone no.",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile phone no.",
          "type": "string"
        },
        "fax": {
          "description": "Fax no.",
          "type": "string"
        },
        "twitter": {
          "description": "Twitter handle.",
          "type": "string"
        },
        "website": {
          "description": "Website URL.",
          "type": "string"
        },
        "physical_address_1": {
          "description": "Physical address, line 1.",
          "type": "string"
        },
        "physical_address_2": {
          "description": "Physical address, line 2.",
          "type": "string"
        },
        "physical_suburb": {
          "description": "Physical address, suburb.",
          "type": "string"
        },
        "physical_city": {
          "description": "Physical address, city.",
          "type": "string"
        },
        "physical_postcode": {
          "description": "Physical address, post code.",
          "type": "string"
        },
        "physical_state": {
          "description": "Physical address, state.",
          "type": "string"
        },
        "physical_country_id": {
          "description": "Physical address, country code.",
          "type": "string"
        },
        "postal_address_1": {
          "description": "Postal address, line 1.",
          "type": "string"
        },
        "postal_address_2": {
          "description": "Postal address, line 2.",
          "type": "string"
        },
        "postal_suburb": {
          "description": "Postal address, suburb.",
          "type": "string"
        },
        "postal_city": {
          "description": "Postal address, city.",
          "type": "string"
        },
        "postal_postcode": {
          "description": "Postal address, post code.",
          "type": "string"
        },
        "postal_state": {
          "description": "Postal address, state.",
          "type": "string"
        },
        "postal_country_id": {
          "description": "Postal address, country code.",
          "type": "string"
        },
        "custom_field_1": {
          "description": "Custom field 1. Can be used to store random data.",
          "type": "string"
        },
        "custom_field_2": {
          "description": "Custom field 2.",
          "type": "string"
        },
        "custom_field_3": {
          "description": "Custom field 3.",
          "type": "string"
        },
        "custom_field_4": {
          "description": "Custom field 4.",
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name"
      ]
    },
    "CustomerCollection": {
      "title": "Customer Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Customer objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "CustomerGroup": {
      "title": "Customer Group",
      "type": "object",
      "properties": {
        "name": {
          "description": "The customer group name.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "group_id": {
          "description": "The customer group identifier.",
          "type": "string"
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "CustomerGroupCollection": {
      "title": "Customer Group Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of customer group objects wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroup"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "CustomerResponse": {
      "title": "Customer Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Customer"
        }
      }
    },
    "DiscountCustomerParam": {
      "title": "Customer applicable to a discount",
      "type": "object",
      "properties": {
        "customer_group_id": {
          "description": "Customer group ID",
          "type": "string"
        }
      }
    },
    "DiscountLineItem": {
      "title": "Line Item, for use while applying a discount",
      "type": "object",
      "properties": {
        "id": {
          "description": "Line item ID.",
          "type": "string"
        },
        "handle": {
          "description": "Handle.",
          "type": "string"
        },
        "product_id": {
          "description": "Product ID",
          "type": "string"
        },
        "product_brand_id": {
          "description": "Product Brand ID.",
          "type": "string"
        },
        "product_supplier_id": {
          "description": "Product Supplier ID.",
          "type": "string"
        },
        "product_type_id": {
          "description": "Product Type ID.",
          "type": "string"
        },
        "product_tag_ids": {
          "description": "Product Tag IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variant_parent_id": {
          "description": "Product variant parent ID",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity of the line item.",
          "type": "integer"
        },
        "unit_price": {
          "description": "The unit price for the line item.",
          "type": "number",
          "format": "double"
        },
        "price_adjusted": {
          "description": "Indicator to suggest that the price has been adjusted manually, such as through a discount.",
          "type": "boolean"
        },
        "confirmed": {
          "description": "Whether the line item is confirmed as part of a layby or on account sale.",
          "type": "boolean"
        },
        "loyalty_value": {
          "description": "The line item's loyalty value",
          "type": "number",
          "format": "double"
        },
        "explicit_loyalty_value": {
          "description": "Whether loyalty was explicitly set in the product or it just uses the default outlet ratio.",
          "type": "boolean"
        },
        "unit_discount": {
          "description": "The line item's unit discount",
          "type": "number",
          "format": "double"
        },
        "unit_tax_discount": {
          "description": "The line item's unit tax discount",
          "type": "number",
          "format": "double"
        },
        "promotion_ids": {
          "description": "List of promotion IDs applied to this line item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "handle",
        "product_id",
        "product_brand_id",
        "product_supplier_id",
        "product_type_id",
        "product_tag_ids",
        "quantity",
        "unit_price",
        "unit_tax"
      ]
    },
    "DiscountSaleParam": {
      "title": "Sale object for use in a Discount request",
      "type": "object",
      "properties": {
        "line_items": {
          "description": "Collection of line items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountLineItem"
          }
        },
        "total_price": {
          "description": "Total (tax exclusive) price of the sale",
          "type": "number",
          "format": "double"
        },
        "total_tax": {
          "description": "Total tax.",
          "type": "number",
          "format": "double"
        },
        "sale_date": {
          "description": "Sale timestamp in UTC.",
          "type": "string"
        }
      },
      "required": [
        "line_items",
        "total_price",
        "total_tax",
        "sale_date"
      ]
    },
    "DiscountResponse": {
      "title": "DiscountParam consists of a Sale, and related information to check if a promotion applies, and to calculate the discount",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DiscountResponseParam"
        }
      }
    },
    "DiscountResponseParam": {
      "title": "DiscountParam consists of a Sale, and related information to check if a promotion applies, and to calculate the discount",
      "type": "object",
      "properties": {
        "sale": {
          "$ref": "#/definitions/DiscountSaleParam"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionDescription"
          }
        },
        "promo_code_validation": {
          "$ref": "#/definitions/PromoCodeValidation"
        }
      }
    },
    "DiscountParam": {
      "title": "DiscountParam consists of a Sale, and related information to check if a promotion applies, and to calculate the discount",
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/DiscountCustomerParam"
        },
        "sale": {
          "$ref": "#/definitions/DiscountSaleParam"
        },
        "promo_code": {
          "description": "The promo code to apply to this sale",
          "type": "string"
        },
        "channel": {
          "description": "The channel where the sale is coming from",
          "type": "string"
        },
        "outlet_id": {
          "description": "The outlet ID for this sale",
          "type": "string"
        },
        "is_tax_inclusive": {
          "description": "Indication whether the sale is tax inclusive or tax exclusive",
          "type": "boolean"
        }
      },
      "required": [
        "customer",
        "sale",
        "channel",
        "outlet_id"
      ]
    },
    "Filter": {
      "title": "Condition Filter",
      "type": "object",
      "properties": {
        "field": {
          "description": "name of the filter field",
          "type": "string",
          "enum": [
            "brand_id",
            "product_id",
            "supplier_id",
            "tag_id",
            "type_id",
            "variant_parent_id"
          ]
        },
        "value": {
          "description": "value of the filter field",
          "type": "string"
        }
      },
      "required": [
        "field",
        "value"
      ]
    },
    "Image": {
      "title": "Image",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "product_id": {
          "description": "The ID of the product this image is associated with.",
          "type": "string",
          "format": "uuid"
        },
        "position": {
          "description": "Position of the image in collection of images associated with a product.",
          "type": "number",
          "format": "double"
        },
        "status": {
          "description": "Status if the image upload processing. Can be `processing`, `uploaded`, `error`.",
          "type": "string"
        }
      }
    },
    "ImagePosition": {
      "title": "Image Position",
      "type": "object",
      "properties": {
        "position": {
          "description": "New position for the image.",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "position"
      ]
    },
    "ImageResponse": {
      "title": "Image Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Image"
        }
      }
    },
    "ImageSample": {
      "title": "Image Sample",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Inventory": {
      "title": "Inventory",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "product_id": {
          "description": "The ID of the product associated with this inventory record.",
          "type": "string"
        },
        "outlet_id": {
          "description": "The ID of the outlet associated with this inventory record.",
          "type": "string"
        },
        "inventory_level": {
          "description": "Current inventory level.",
          "type": "number",
          "format": "double"
        },
        "reorder_point": {
          "description": "Level at which a product should be automatically included in stock orders.",
          "type": "number",
          "format": "double"
        },
        "reorder_amount": {
          "description": "Amount to be added to the automatic stock order.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "InventoryCollection": {
      "title": "Inventory Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Inventory records wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Inventory"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "InventoryCount": {
      "title": "Inventory Count",
      "type": "object",
      "properties": {
        "outlet_id": {
          "description": "The ID of the outlet in which the count is taking place.",
          "type": "string",
          "format": "uuid"
        },
        "due_at": {
          "description": "The date for which the count is scheduled.",
          "type": "string"
        },
        "show_inactive": {
          "description": "Indicates whether inactive products should be included in the count.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the inventory count",
          "type": "string"
        },
        "status": {
          "description": "The status of the inventory count. One of: `STOCKTAKE_SCHEDULED`, `STOCKTAKE_IN_PROGRESS`, `STOCKTAKE_IN_PROGRESS_PROCESSED`, `STOCKTAKE_COMPLETE`.",
          "type": "string"
        },
        "filters": {
          "description": "An array of filter objects. Max 25.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCountFilter"
          }
        },
        "type": {
          "description": "Consignment type, for inventory counts always `STOCKTAKE`",
          "type": "string"
        }
      },
      "required": [
        "outlet_id",
        "name",
        "status",
        "type"
      ]
    },
    "InventoryCountFilter": {
      "title": "Inventory Count Filter",
      "type": "object",
      "properties": {
        "type": {
          "description": "Filter type. One of `product_type`, `brand`, `supplier`, `tag`, `product`.",
          "type": "string"
        },
        "value": {
          "description": "The ID of the filter object.",
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "InventoryCountItem": {
      "title": "Inventory Count Item",
      "type": "object",
      "properties": {
        "product_id": {
          "description": "The ID of the product associated with this count item.",
          "type": "string",
          "format": "uuid"
        },
        "product_sku": {
          "type": "string"
        },
        "count": {
          "description": "Expected item count.",
          "type": "string"
        },
        "received": {
          "description": "Observed item count.",
          "type": "string"
        },
        "cost": {
          "description": "The cost of the item.",
          "type": "string"
        },
        "is_included": {
          "description": "Indicated whether the item was included via a filter. Can be `null`. For full count (no filters) always `true`.",
          "type": "boolean"
        },
        "status": {
          "description": "The status of the item. One of: `PENDING`, `SUCCESS`.",
          "type": "string"
        },
        "created_at": {
          "description": "The creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "The deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "product_id",
        "count",
        "received",
        "cost",
        "status",
        "created_at",
        "updated_at",
        "deleted_at",
        "version"
      ]
    },
    "InventoryCountItemRequest": {
      "title": "Inventory Count Item Request",
      "type": "object",
      "properties": {
        "product_id": {
          "description": "The ID of the product for which the count should be adjusted.",
          "type": "string"
        },
        "received": {
          "description": "The adjustment value",
          "type": "string"
        }
      },
      "required": [
        "product_id",
        "received"
      ]
    },
    "InventoryCountItemResponse": {
      "title": "Inventory Count Item Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/InventoryCountItem"
        }
      },
      "required": [
        "data"
      ]
    },
    "LineItem": {
      "title": "Line Item",
      "type": "object",
      "properties": {
        "tax_id": {
          "description": "???",
          "type": "string"
        },
        "discount_total": {
          "description": "Total discount for the line item.",
          "type": "number",
          "format": "double"
        },
        "is_return": {
          "description": "Indicates whether this line item is a return from another sale (referenced by `return_for` on the main sale object).",
          "type": "boolean"
        },
        "cost": {
          "description": "Unit cost for the line item.",
          "type": "number",
          "format": "double"
        },
        "cost_total": {
          "description": "Total cost for the line item.",
          "type": "number",
          "format": "double"
        },
        "price_total": {
          "description": "Total price for the line item.",
          "type": "number",
          "format": "double"
        },
        "tax": {
          "description": "Unit tax for the line item. **deprecated** ???",
          "type": "number",
          "format": "double"
        },
        "tax_total": {
          "description": "Total tax value.",
          "type": "number",
          "format": "double"
        },
        "product_id": {
          "description": "Valid product ID.",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity of product units included in the sale.",
          "type": "number",
          "format": "double"
        },
        "price": {
          "description": "Unit price for the product.",
          "type": "number",
          "format": "double"
        },
        "tax_components": {
          "description": "Collection of tax components associated with the line item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemTaxComponent"
          }
        },
        "discount": {
          "description": "Discount. ??? Unit? Should that be even posted?",
          "type": "number",
          "format": "double"
        },
        "loyalty_value": {
          "description": "The value that should be added to associated customer's loyalty balance.",
          "type": "number",
          "format": "double"
        },
        "price_set": {
          "description": "Indicates whether the price was set manually. Using `true` means that the value will never be refreshed from the price book when reloaded (sale retrieved from parked sales).",
          "type": "boolean"
        },
        "sequence": {
          "description": "Order of the line item in the sale.",
          "type": "number",
          "format": "double"
        },
        "note": {
          "description": "Line item note.",
          "type": "string"
        },
        "status": {
          "description": "Line item status. ???",
          "type": "string"
        }
      }
    },
    "LineItemTaxComponent": {
      "title": "Line Item Tax Component",
      "type": "object",
      "properties": {
        "rate_id": {
          "description": "Tax rate ID.",
          "type": "string"
        },
        "total_tax": {
          "description": "Tax total.",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "rate_id",
        "total_tax"
      ]
    },
    "Outlet": {
      "title": "Outlet",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "The outlet name.",
          "type": "string"
        },
        "time_zone": {
          "description": "Outlet timezone. **read only**",
          "type": "string"
        },
        "default_tax_id": {
          "description": "Default tax id used for sales in this outlet. **deprecated**",
          "type": "string"
        },
        "currency": {
          "description": "Currency name.",
          "type": "string"
        },
        "currency_symbol": {
          "description": "Currency symbol.",
          "type": "string"
        },
        "display_prices": {
          "description": "Indicates whether prices in this outlet should be displayed as tax-inclusive.",
          "type": "string"
        },
        "physical_address_1": {
          "description": "Physical address, line 1.",
          "type": "string"
        },
        "physical_address_2": {
          "description": "Physical address, line 2.",
          "type": "string"
        },
        "physical_suburb": {
          "description": "Physical address, suburb.",
          "type": "string"
        },
        "physical_city": {
          "description": "Physical address, city.",
          "type": "string"
        },
        "physical_postcode": {
          "description": "Physical address, post code.",
          "type": "string"
        },
        "physical_state": {
          "description": "Physical address, state.",
          "type": "string"
        },
        "physical_country_id": {
          "description": "Physical address, country code.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OutletCollection": {
      "title": "Outlet Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Outlet objects  wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Outlet"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "OutletResponse": {
      "title": "Outlet Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Outlet"
        }
      }
    },
    "OutletTax": {
      "type": "object",
      "title": "Outlet Product Tax",
      "properties": {
        "outlet_id": {
          "type": "string",
          "description": "The ID of the outlet this record is associated with.",
          "format": "uuid"
        },
        "product_id": {
          "type": "string",
          "description": "The ID of the product this record is associated with.",
          "format": "uuid"
        },
        "tax_id": {
          "type": "string",
          "description": "The ID of the tax this record is associated with.",
          "format": "uuid"
        },
        "deleted_at": {
          "type": "string",
          "description": "Deletion timestamp in UTC."
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "outlet_id",
        "product_id",
        "tax_id",
        "version"
      ]
    },
    "OutletTaxCollection": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "description": "An array of outlet-product-tax records.",
          "items": {
            "$ref": "#/definitions/OutletTax"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "Payment": {
      "title": "Payment",
      "type": "object",
      "properties": {
        "name": {
          "description": "Payment type name.",
          "type": "string"
        },
        "register_id": {
          "description": "A valid register ID.",
          "type": "string"
        },
        "retailer_payment_type_id": {
          "description": "A valid retailer payment type ID.",
          "type": "string"
        },
        "payment_type_id": {
          "description": "A payment type associated with the retailer payment type. **deprecated** ???",
          "type": "string"
        },
        "payment_date": {
          "description": "Payment date in UTC.",
          "type": "string"
        },
        "amount": {
          "description": "Payment amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "PaymentType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated object ID."
        },
        "name": {
          "type": "string",
          "description": "The name of the payment type."
        },
        "type_id": {
          "type": "integer",
          "description": "The ID of the global Vend payment type. It shouldn't be used to identify the payment type - there may be multiple payment types with the same `type_id`."
        },
        "config": {
          "$ref": "#/definitions/PaymentTypeConfig"
        },
        "deleted_at": {
          "type": "null",
          "description": "The deletion timestamp."
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "name",
        "type_id",
        "version"
      ]
    },
    "PaymentTypeCollection": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "description": "An array of payment types.",
          "items": {
            "$ref": "#/definitions/PaymentType"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "PaymentTypeConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of  the gateway."
        },
        "print": {
          "type": "boolean",
          "description": "Indicates whether a receipt will be printed???"
        }
      }
    },
    "PriceBook": {
      "title": "Price Book",
      "type": "object",
      "properties": {
        "name": {
          "description": "Price book name.",
          "type": "string"
        },
        "customer_group_id": {
          "description": "The ID of the customer group",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "valid_from": {
          "description": "The date when the price book becomes valid (active).",
          "type": "string"
        },
        "valid_to": {
          "description": "The date when the price book becomes invalid (inactive).",
          "type": "string"
        },
        "restrict_to_platform_key": {
          "description": "`\"0\"` - all platforms, `\"1\"` - in store, `\"2\"` - ecommerce.",
          "type": "string"
        },
        "outlet_id": {
          "description": "The ID of an outlet for which the price book should be used.+ type: GENERAL (string) - Internal value. Safe to ignore.",
          "type": "string"
        },
        "restrict_to_platform_label": {
          "description": "One of `In Store`, `Ecommerce`, `All Platforms`.",
          "type": "string"
        },
        "customer_group": {
          "$ref": "#/definitions/CustomerGroup"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "customer_group_id"
      ]
    },
    "PriceBookBase": {
      "title": "Price Book Base",
      "type": "object",
      "properties": {
        "name": {
          "description": "Price book name.",
          "type": "string"
        },
        "customer_group_id": {
          "description": "The ID of the customer group",
          "type": "string"
        },
        "valid_from": {
          "description": "The date when the price book becomes valid (active).",
          "type": "string"
        },
        "valid_to": {
          "description": "The date when the price book becomes invalid (inactive).",
          "type": "string"
        },
        "restrict_to_platform_key": {
          "description": "`\"0\"` - all platforms, `\"1\"` - in store, `\"2\"` - ecommerce.",
          "type": "string"
        },
        "outlet_id": {
          "description": "The ID of an outlet for which the price book should be used.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "customer_group_id"
      ]
    },
    "PriceBookCollection": {
      "title": "Price Book Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of price book objects wrapped in a top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceBook"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "PriceBookProduct": {
      "title": "Price Book Product",
      "type": "object",
      "properties": {
        "product_id": {
          "description": "The ID of the associated product.",
          "type": "string"
        },
        "price_book_id": {
          "description": "The ID of the price book this product belongs to.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "price": {
          "description": "Retail price.",
          "type": "number",
          "format": "double"
        },
        "loyalty_value": {
          "description": "Price book defined loyalty value.",
          "type": "number",
          "format": "double"
        },
        "min_units": {
          "description": "The minimum number of items for which this price will be used.",
          "type": "number",
          "format": "double"
        },
        "max_units": {
          "description": "The maximum number of items for which this price will be used.",
          "type": "number",
          "format": "double"
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        }
      },
      "required": [
        "product_id",
        "price_book_id"
      ]
    },
    "PriceBookProductCollection": {
      "title": "Price Book Product Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of price book objects wrapped in a top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceBookProduct"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "PriceBookResponse": {
      "title": "Price Book Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PriceBook"
        }
      }
    },
    "Product": {
      "title": "Product",
      "type": "object",
      "properties": {
        "name": {
          "description": "Product name.",
          "type": "string"
        },
        "handle": {
          "description": "Product handle. **Note:** Variants share the same handle.",
          "type": "string"
        },
        "sku": {
          "description": "Product sku. **Note:** Should be unique, but it's not verified while posting.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "source_id": {
          "description": "External reference ID.",
          "type": "string"
        },
        "source_variant_id": {
          "description": "Secondary external reference ID.",
          "type": "string"
        },
        "variant_parent_id": {
          "description": "This value is set if a Product is a variant of another Product.",
          "type": "string"
        },
        "source": {
          "description": "Indicates the origin of the product. Can be USER, SYSTEM, SHOPIFY.",
          "type": "string"
        },
        "active": {
          "description": "Indicated whether the Product is active.",
          "type": "boolean"
        },
        "has_inventory": {
          "description": "Indicates whether inventory is being tracked for the Product.",
          "type": "boolean"
        },
        "is_composite": {
          "description": "Indicates whether the Product is a composite one.",
          "type": "boolean"
        },
        "has_variants": {
          "description": "Indicated whether product has variants.",
          "type": "boolean"
        },
        "description": {
          "description": "A detailed description of the Product. **Note** Can contain HTML.",
          "type": "string"
        },
        "supplier_code": {
          "description": "Supplier code.",
          "type": "string"
        },
        "supply_price": {
          "description": "Default supply price,",
          "type": "number",
          "format": "double"
        },
        "type": {
          "$ref": "#/definitions/ProductTypeSample"
        },
        "supplier": {
          "$ref": "#/definitions/SupplierSample"
        },
        "brand": {
          "$ref": "#/definitions/BrandSample"
        },
        "variant_options": {
          "description": "A list of variant option objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantOption"
          }
        },
        "categories": {
          "description": "A list of tag objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "image_url": {
          "description": "",
          "type": "string"
        },
        "image_thumbnail_url": {
          "description": "",
          "type": "string"
        },
        "images": {
          "description": "A list of image objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageSample"
          }
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "handle",
        "sku"
      ]
    },
    "ProductCollection": {
      "title": "Product Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Product objects wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "ProductResponse": {
      "title": "Product Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Product"
        }
      }
    },
    "ProductType": {
      "title": "Product Type",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Product Type name.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "ProductTypeCollection": {
      "title": "Product Type Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Product Type objects wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductType"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "ProductTypeResponse": {
      "title": "Product Type Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProductType"
        }
      }
    },
    "ProductTypeSample": {
      "title": "Product Type Sample",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PromoCode": {
      "title": "Promotion Code",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "promotion_id": {
          "description": "Promotion ID.",
          "type": "string"
        },
        "created_user_id": {
          "description": "Created User ID.",
          "type": "string"
        },
        "created_user": {
          "$ref": "#/definitions/User"
        },
        "code": {
          "description": "Code for use in the promotion.",
          "type": "string"
        },
        "redeemed": {
          "description": "Number of times this code has been redeemed.",
          "type": "integer"
        },
        "limit": {
          "description": "Redemption limit for this promotion.",
          "type": "integer"
        },
        "created_at": {
          "description": "Time the code was created.",
          "type": "string"
        },
        "group_name": {
          "description": "Name of the group.",
          "type": "string"
        }
      },
      "required": [
        "code"
      ]
    },
    "Promotion": {
      "title": "Promotion",
      "type": "object",
      "description": "A Promotion defines rules and actions for discounting products as part of a sales promotion.",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "The name of the promotion.",
          "type": "string"
        },
        "description": {
          "description": "A short description for the promotion.",
          "type": "string"
        },
        "start_time": {
          "description": "The time the promotion begins, in UTC, e.g. `2006-01-02T15:04:05`.",
          "type": "string"
        },
        "end_time": {
          "description": "The time the promotion ends, in UTC, e.g. `2006-01-02T15:04:05`.",
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/Condition"
        },
        "action": {
          "$ref": "#/definitions/Action"
        },
        "loyalty_multiplier": {
          "description": "The loyalty multiplier for the promotion.",
          "type": "number",
          "format": "double"
        },
        "outlet_ids": {
          "description": "A list of outlet IDs for the promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "channels": {
          "description": "A list of outlet IDs for the promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_group_ids": {
          "description": "A list of outlet IDs for the promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "The status of the promotion.",
          "type": "string"
        },
        "use_promo_code": {
          "description": "Whether or not this promotion uses promo codes.",
          "type": "boolean"
        },
        "add_promo_code": {
          "description": "A list of promo codes to associate with this promotion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromoCode"
          }
        },
        "promo_code_summary": {
          "description": "A summary of the added promo codes added.",
          "type": "#/definitions/PromoCodeSummary"
        }
      },
      "required": [
        "name",
        "start_time",
        "condition",
        "action",
        "use_promo_code"
      ]
    },
    "PromotionPromoCodesResponse": {
      "title": "Promotion Promo Codes response",
      "type": "object",
      "properties": {
        "data": {
          "description": "A map of promo codes to booleans, wrapped inside a data object.",
          "type": "object"
        }
      }
    },
    "PromotionActivePromoCodesResponse": {
      "title": "Promotion Promo Codes response",
      "type": "object",
      "properties": {
        "data": {
          "description": "A map of promo codes to booleans, wrapped inside a data object.",
          "$ref": "#/definitions/PromoCodesMap"
        }
      }
    },
    "PromoCodesMap": {
      "title": "Map of Promo Codes to booleans",
      "type": "object",
      "additionalProperties": {
        "description": "A map of promo codes to booleans.",
        "type": "boolean"
      }
    },
    "PromotionDeletePromoCodesResponse": {
      "title": "Promotion Promo Codes response",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of codes which were not deleted.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PromoCodeValidation": {
      "title": "Promo Code validation result",
      "type": "object",
      "properties": {
        "promotion_id": {
          "description": "ID for the promotion.",
          "type": "string"
        },
        "promo_code_id": {
          "description": "ID for the promo code.",
          "type": "string"
        },
        "promo_code": {
          "description": "The promo code itself.",
          "type": "string"
        },
        "status": {
          "description": "Status field for the promo code.",
          "type": "string"
        }
      }
    },
    "PromoCodeSummary": {
      "title": "Promo Code summary",
      "type": "object",
      "properties": {
        "total_promo_code": {
          "description": "Total promo code.",
          "type": "integer"
        },
        "redeemed_amount": {
          "description": "Amount redeemed by promo codes.",
          "type": "integer"
        }
      }
    },
    "PromotionCollection": {
      "title": "Promotion Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Promotion objects wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Promotion"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "PromotionDescription": {
      "title": "PromotionDescription",
      "type": "object",
      "description": "Basic description for a Promotion.",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "The name of the promotion.",
          "type": "string"
        },
        "description": {
          "description": "A short description for the promotion.",
          "type": "string"
        }
      }
    },
    "Register": {
      "title": "Register",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "The Register name.",
          "type": "string"
        },
        "outlet_id": {
          "description": "A valid ID of an Outlet that this register is associated with.",
          "type": "string"
        },
        "ask_for_note_on_save": {
          "description": "`0` for **Never**, `1` for **On Save/Layby/Account/Return**, `2` for **Always**.",
          "type": "number",
          "format": "double"
        },
        "print_note_on_receipt": {
          "description": "",
          "type": "boolean"
        },
        "ask_for_user_on_sale": {
          "description": "",
          "type": "boolean"
        },
        "show_discounts_on_receipts": {
          "description": "",
          "type": "boolean"
        },
        "print_receipt": {
          "description": "Indicates whether a receipt should be printed after a sale.",
          "type": "boolean"
        },
        "email_receipt": {
          "description": "Indicates whether a receipt should be emailed after a sale.",
          "type": "boolean"
        },
        "invoice_prefix": {
          "description": "Invoice number prefix.",
          "type": "string"
        },
        "invoice_suffix": {
          "description": "Invoice number suffix.",
          "type": "string"
        },
        "invoice_sequence": {
          "description": "The numeric part of the last issued invoice.",
          "type": "number",
          "format": "double"
        },
        "button_layout_id": {
          "description": "Register ID.",
          "type": "string"
        },
        "is_open": {
          "description": "Indicates if the Register is currently open.",
          "type": "boolean"
        },
        "register_open_time": {
          "description": "Date/time when the register was open. Always in UTC.",
          "type": "string"
        },
        "register_close_time": {
          "description": "Date/time when the register was closed. Null if currently open.",
          "type": "string"
        },
        "register_open_sequence_id": {
          "description": "**internal** The ID of the current register closure object.",
          "type": "string"
        },
        "cash_managed_payment_type_id": {
          "description": "**internal** The ID of the payment type used for cash management transactions in this regsiter.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RegisterCollection": {
      "title": "Register Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array Register objects wrapped in a top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Register"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "RegisterResponse": {
      "title": "Register Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Register"
        }
      }
    },
    "RequestLog": {
      "type": "object",
      "title": "Request Log",
      "description": "An object representing a single request and response made to a channel.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated object ID."
        },
        "grouping_id": {
          "type": "string",
          "description": "An identifier used to group together requests that occurred together as part of the same job or Vend API request."
        },
        "request_method": {
          "type": "string",
          "description": "The HTTP method used to make the request.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ]
        },
        "status_code": {
          "type": "number",
          "description": "The HTTP status code received in the response."
        },
        "request": {
          "type": "string",
          "description": "A dump of the full request information in HTTP format, including headers and any request body."
        },
        "response": {
          "type": "string",
          "description": "A dump of the full response information in HTTP format, including headers and any response body."
        },
        "error": {
          "type": "string",
          "description": "f an error occurred with the request, such as an inability to resolve a hostname, connect or TLS errors, this will be recorded here. Only errors with the ability to make the request are logged here, rather than errors when interpreting a response."
        },
        "occurred_at": {
          "type": "string",
          "description": "An RFC3339 representation of the time at which the request was logged.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "grouping_id",
        "request_method",
        "request",
        "response",
        "occurred_at"
      ]
    },
    "RequestCollectionResponse": {
      "type": "object",
      "title": "Request Logs response",
      "description": "A collection of request log records wrapped in the top-level data object.",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestLog"
          }
        }
      }
    },
    "RequestSingleResponse": {
      "type": "object",
      "title": "Request Log response",
      "description": "A single request log record wrapped in the top-level data object.",
      "properties": {
        "data": {
          "$ref": "#/definitions/RequestLog"
        }
      }
    },
    "Sale": {
      "title": "Sale",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "outlet_id": {
          "description": "Valid outlet ID for the retailer.",
          "type": "string"
        },
        "register_id": {
          "description": "Valid register ID for the retailer.",
          "type": "string"
        },
        "user_id": {
          "description": "Valid user ID for the retailer.",
          "type": "string"
        },
        "customer_id": {
          "description": "Valid customer ID for the retailer.",
          "type": "string"
        },
        "invoice_number": {
          "description": "Invoice number which if provided, should use the prefix and suffix defined for the register.",
          "type": "string"
        },
        "invoice_sequence": {
          "description": "Optionally provided value.",
          "type": "number",
          "format": "double"
        },
        "source": {
          "type": "string",
          "description": "Origin of the sale. USER for sales created in Vend client apps, SHOPIFY for sale synced from Shopify by the integration, ECOMMERCE for sales coming from Vend Ecommerce."
        },
        "source_id": {
          "type": "string",
          "description": "External ID for sales coming from other systems"
        },
        "status": {
          "description": "Sale status. One of: CLOSED, SAVED, ONACCOUNT, ONACCOUNT_CLOSED, LAYBY, LAYBY_CLOSED. VOIDED ???",
          "type": "string"
        },
        "note": {
          "description": "Sale Note.",
          "type": "string"
        },
        "short_code": {
          "description": "6 character code used in the loyalty system. ???",
          "type": "string"
        },
        "return_for": {
          "description": "Reference ID to a different sale if this sale was created as a return.",
          "type": "string"
        },
        "total_price": {
          "description": "Total (tax exclusive) price of the sale",
          "type": "number",
          "format": "double"
        },
        "total_tax": {
          "description": "Total tax.",
          "type": "number",
          "format": "double"
        },
        "total_loyalty": {
          "description": "Total incurred loyalty.",
          "type": "number",
          "format": "double"
        },
        "sale_date": {
          "description": "Sale timestamp in UTC.",
          "type": "string"
        },
        "created_at": {
          "description": "Creation timestamp in UTC.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp in UTC.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "taxes": {
          "description": "Collection of taxes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaleTax"
          }
        },
        "line_items": {
          "description": "Collection of line items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "payments": {
          "description": "Collection of payments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "adjustments": {
          "type": "array",
          "description": "Collection of adjustments.",
          "items": {
            "$ref": "#/definitions/adjustment"
          }
        }
      }
    },
    "SaleCollection": {
      "title": "Sale Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Sales wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sale"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "SaleResponse": {
      "title": "Sale Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Sale"
        }
      }
    },
    "SaleTax": {
      "title": "Sale Tax",
      "type": "object",
      "properties": {
        "name": {
          "description": "Tax name.",
          "type": "string"
        },
        "rate": {
          "description": "Tax rate.",
          "type": "number",
          "format": "double"
        },
        "amount": {
          "description": "Tax amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "SearchResponse": {
      "title": "Search Response",
      "type": "object",
      "description": "",
      "properties": {
        "data": {
          "description": "A collection of objects of one of the supported types: sales, products or customers.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Supplier": {
      "title": "Supplier",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Supplier name.",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "deleted_at": {
          "description": "",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "SupplierCollection": {
      "title": "Supplier Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Suppliers wrapped in top level `data` object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Supplier"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "SupplierResponse": {
      "title": "Supplier Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Supplier"
        }
      }
    },
    "SupplierSample": {
      "title": "Supplier Sample",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Tag": {
      "title": "Tag",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Tag name.",
          "type": "string"
        },
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string"
        },
        "deleted_at": {
          "description": "Deletion timestamp in UTC.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name"
      ]
    },
    "TagCollection": {
      "title": "Tag Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of Tag objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "TagResponse": {
      "title": "Tag Response",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Tag"
        }
      }
    },
    "Tax": {
      "title": "Tax",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "The name of the tax.",
          "type": "string"
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "deleted_at": {
          "description": "The deletion timestamp.",
          "type": "string"
        },
        "rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRate"
          }
        },
        "is_default": {
          "description": "Indicates whether the tax is used as the default one.",
          "type": "boolean"
        },
        "display_name": {
          "description": "The name of the tax used for display.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "version",
        "deleted_at",
        "is_default",
        "display_name"
      ]
    },
    "TaxCollection": {
      "title": "Tax Collection",
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of tax objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tax"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "TaxRate": {
      "title": "Tax rate",
      "type": "object",
      "properties": {
        "id": {
          "description": "Auto-generated object ID.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "The name of the tax rate.",
          "type": "string"
        },
        "rate": {
          "description": "Tax rate value. `0.1 = 10%`.",
          "type": "number",
          "format": "double"
        },
        "display_name": {
          "description": "The name of the tax rate used for display.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "rate",
        "display_name"
      ]
    },
    "User": {
      "type": "object",
      "title": "User",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Auto-generated object ID."
        },
        "username": {
          "type": "string",
          "description": "User's username used for login."
        },
        "display_name": {
          "type": "string",
          "description": "Full user's name to be used for display in the UI."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "email_verified_at": {
          "type": "string",
          "description": "The timestamp of users email verification."
        },
        "restricted_outlet_id": {
          "type": "string",
          "description": "**deprecated** Use the `restricted_outlet_ids` instead."
        },
        "restricted_outlet_ids": {
          "type": "array",
          "description": "A list of outlet IDs the user is associated with",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "account_type": {
          "type": "string",
          "enum": [
            "cashier",
            "manager",
            "admin"
          ],
          "description": "User's account type."
        },
        "created_at": {
          "type": "string",
          "description": "Creation timestamp in UTC."
        },
        "updated_at": {
          "type": "string",
          "description": "Last update timestamp in UTC."
        },
        "deleted_at": {
          "type": "string",
          "description": "Deletion timestamp in UTC."
        },
        "seen_at": {
          "type": "string",
          "description": "The timestamp of the user's last activity in the system."
        },
        "target_daily": {
          "type": "number",
          "description": "Daily sales target for the user."
        },
        "target_weekly": {
          "type": "number",
          "description": "Weekly sales target for the user."
        },
        "target_monthly": {
          "type": "number",
          "description": "Monthly sales target for the user."
        },
        "version": {
          "description": "Auto-incrementing object version number.",
          "type": "integer",
          "format": "int64"
        },
        "permissions": {
          "type": "null"
        },
        "is_primary_user": {
          "type": "boolean",
          "description": "Indicated whether this user is the primary user for the account."
        },
        "image_source": {
          "type": "string",
          "description": "URL of the default-sized user's avatar."
        },
        "images": {
          "$ref": "#/definitions/UserImages"
        }
      },
      "required": [
        "id",
        "username",
        "account_type",
        "created_at",
        "updated_at",
        "version",
        "is_primary_user"
      ]
    },
    "UserCollection": {
      "type": "object",
      "title": "User Collection",
      "properties": {
        "data": {
          "type": "array",
          "description": "An array of users.",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      },
      "required": [
        "data",
        "version"
      ]
    },
    "UserImages": {
      "type": "object",
      "description": "On object containing URLs for different sizes of the user’s avatar.",
      "title": "User Image",
      "properties": {
        "ss": {
          "type": "string"
        },
        "standard": {
          "type": "string"
        },
        "st": {
          "type": "string"
        },
        "original": {
          "type": "string"
        },
        "thumb": {
          "type": "string"
        },
        "sl": {
          "type": "string"
        },
        "sm": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "title": "User Response",
      "description": "A response for a single user GET request.",
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "VariantOption": {
      "title": "Variant Option",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Variant Option name.",
          "type": "string"
        },
        "value": {
          "description": "The value of a Variant Option.",
          "type": "string"
        }
      }
    },
    "Version": {
      "type": "object",
      "description": "An object containing the highest and lowest version numbers for all items of the returned collection.",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int64",
          "description": "Lowest version number of the payload."
        },
        "max": {
          "type": "integer",
          "format": "int64",
          "description": "Highest version number of the payload."
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "adjustment": {
      "type": "object",
      "title": "Adjustment",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "NON_CASH_FEE",
            "DISCOUNT"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "value"
      ],
      "description": "An adjustment contains a modification to the sale price. For example, it can be a service fee (fee when the customer pays by credit card) or a discount.\nThe types defined here are the one used so far, but we reserve the right to add others."
    }
  },
  "parameters": {
    "After": {
      "name": "after",
      "in": "query",
      "type": "integer",
      "format": "int64",
      "description": "The lower limit for the version numbers to be included in the response."
    },
    "Before": {
      "name": "before",
      "in": "query",
      "type": "integer",
      "format": "int64",
      "description": "The upper limit for the version numbers to be included in the response."
    },
    "Deleted": {
      "name": "deleted",
      "in": "query",
      "type": "boolean",
      "description": "Indicates whether deleted items should be included in the response."
    },
    "PageSize": {
      "name": "page_size",
      "in": "query",
      "type": "integer",
      "description": "The maximum number of items to be returned in the response."
    }
  },
  "security": [
    {
      "personal_token": []
    }
  ],
  "securityDefinitions": {
    "personal_token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
